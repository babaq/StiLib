//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExClient.ExService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExService.IExService", CallbackContract=typeof(ExClient.ExService.IExServiceCallback))]
    public interface IExService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Invoke", ReplyAction="http://tempuri.org/IExService/InvokeResponse")]
        string Invoke(string ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/InvokeScript", ReplyAction="http://tempuri.org/IExService/InvokeScriptResponse")]
        string InvokeScript(string ex, string script);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/GetEx", ReplyAction="http://tempuri.org/IExService/GetExResponse")]
        string[] GetEx();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Terminate", ReplyAction="http://tempuri.org/IExService/TerminateResponse")]
        string Terminate(string ex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/get_RunStop", ReplyAction="http://tempuri.org/IExService/get_RunStopResponse")]
        bool get_RunStop();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/set_RunStop", ReplyAction="http://tempuri.org/IExService/set_RunStopResponse")]
        void set_RunStop(bool value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/Subscribe", ReplyAction="http://tempuri.org/IExService/SubscribeResponse")]
        string Subscribe(bool sub_unsub);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IExServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExService/OnRunStop", ReplyAction="http://tempuri.org/IExService/OnRunStopResponse")]
        string OnRunStop(bool runstop);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IExServiceChannel : ExClient.ExService.IExService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ExServiceClient : System.ServiceModel.DuplexClientBase<ExClient.ExService.IExService>, ExClient.ExService.IExService {
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ExServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Invoke(string ex) {
            return base.Channel.Invoke(ex);
        }
        
        public string InvokeScript(string ex, string script) {
            return base.Channel.InvokeScript(ex, script);
        }
        
        public string[] GetEx() {
            return base.Channel.GetEx();
        }
        
        public string Terminate(string ex) {
            return base.Channel.Terminate(ex);
        }
        
        public bool get_RunStop() {
            return base.Channel.get_RunStop();
        }
        
        public void set_RunStop(bool value) {
            base.Channel.set_RunStop(value);
        }
        
        public string Subscribe(bool sub_unsub) {
            return base.Channel.Subscribe(sub_unsub);
        }
    }
}
