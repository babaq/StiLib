<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StiLib</name>
    </assembly>
    <members>
        <member name="T:StiLib.Vision.Stimuli.Two_dBar">
            <summary>
            Two Drifting Bar
            </summary>
        </member>
        <member name="T:StiLib.Core.SLForm">
            <summary>
            StiLib base form class to Host a XNA render window
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.#ctor">
            <summary>
            Init to Default -- width:800, height:600, refreshrate:0, Vsync:true, showcursor:true
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes the SLForm hosting XNA GraphicsDevice
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate">windowed mode(0), fullscreen mode(>0)</param>
            <param name="isvsync"></param>
            <param name="isshowcursor"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.CheckDevice">
            <summary>
            Check if Device is ready
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Redraws in response to a WinForms paint message
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Ignores WinForms paint-background messages. The default implementation
            would clear the client to the current background color, causing
            flickering when our OnPaint implementation then immediately draws some
            other color over the top using the XNA Framework GraphicsDevice.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.Dispose(System.Boolean)">
            <summary>
            Disposes the SLForm, unloading the ContentManager.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.SLForm_Resize(System.Object,System.EventArgs)">
            <summary>
             Registered the SLForm Resize handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.SLForm_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Registered the SLForm MouseDown handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.SLForm_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Registered the SLForm MouseMove handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.SLForm_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Registered the SLForm key handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLForm.Initialize">
            <summary>
            Derived classes override this to initialize their drawing code.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.LoadContent">
            <summary>
            LoadContent will be called before Initialize() and is the place to load
            all of your content.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.UnloadContent">
            <summary>
            UnloadContent will be called once SLForm is to disposed and is the place to unload
            all content.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.Update">
            <summary>
            Custom Content Update
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.Draw">
            <summary>
            Derived classes override this to draw themselves using the GraphicsDevice.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.SetFlow">
            <summary>
            Set Flow Control to begin a new Experiment
            </summary>
        </member>
        <member name="M:StiLib.Core.SLForm.MarkHead">
            <summary>
            Transfer Experiment MarkerHeader only once before it's running
            </summary>
        </member>
        <member name="E:StiLib.Core.SLForm.DeviceCreated">
            <summary>
            Handle DeviceCreated Event
            </summary>
        </member>
        <member name="E:StiLib.Core.SLForm.DeviceDisposing">
            <summary>
            Handle DeviceDisposing Event
            </summary>
        </member>
        <member name="E:StiLib.Core.SLForm.DeviceReset">
            <summary>
            Handle DeviceReset Event
            </summary>
        </member>
        <member name="E:StiLib.Core.SLForm.DeviceResetting">
            <summary>
            Handle DeviceResetting Event
            </summary>
        </member>
        <member name="P:StiLib.Core.SLForm.GraphicsDevice">
            <summary>
            Gets the current graphics device.
            </summary>
        </member>
        <member name="P:StiLib.Core.SLForm.Services">
            <summary>
            Gets an IServiceProvider containing our IGraphicsDeviceService.
            This can be used with components such as the ContentManager,
            which use this service to look up the GraphicsDevice.
            </summary>
        </member>
        <member name="P:StiLib.Core.SLForm.Content">
            <summary>
            Gets the content manager
            </summary>
        </member>
        <member name="P:StiLib.Core.SLForm.GO_OVER">
            <summary>
            Toggle Between Content Run(true) and RunOver(false) State
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dBar.#ctor">
            <summary>
            Default SLForm Settings
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dBar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Custom SLForm Settings
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate"></param>
            <param name="isvsync"></param>
            <param name="isshowcursor"></param>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dBar.text">
            <summary>
            Text to draw Message
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dBar.ex">
            <summary>
            Hold the Information about the Experiment
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dBar.Bar">
            <summary>
            Two Drifting Bars
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dBar.barangle">
            <summary>
            Angle between directions of two drifting bars
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dBar.Initialize">
            <summary>
            Init all information of the experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dBar.SetFlow">
            <summary>
            Set Flow to control experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dBar.MarkHead">
            <summary>
            Send crucial information in MarkerHeader 
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dBar.Update">
            <summary>
            Update experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dBar.Draw">
            <summary>
            Draw Stimuli
            </summary>
        </member>
        <member name="T:StiLib.Vision.Stimuli.RF_dBar">
            <summary>
            Drifting Bar RF Mapping
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.#ctor">
            <summary>
            Default SLForm Settings
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Custom SLForm Settings
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate"></param>
            <param name="isvsync"></param>
            <param name="isshowcursor"></param>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_dBar.text">
            <summary>
            Text to draw Message
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_dBar.ex">
            <summary>
            Hold the Information about the Experiment
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_dBar.Bar">
            <summary>
            Drifting Bar
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_dBar.Rows">
            <summary>
            Scanning Row Number
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_dBar.ScanArea">
            <summary>
            Scanning Area
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.Initialize">
            <summary>
            Init all information of the experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.InitScan">
            <summary>
            Init Scanning parameter
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.SetFlow">
            <summary>
            Set Flow to control experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.MarkHead">
            <summary>
            Send crucial information in MarkerHeader 
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.Update">
            <summary>
            Update experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_dBar.Draw">
            <summary>
            Draw Stimuli
            </summary>
        </member>
        <member name="T:StiLib.Vision.Stimuli.RF_fBar">
            <summary>
            Reverse-Correlation RF Mapping
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.#ctor">
            <summary>
            Default SLForm Settings
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Custom SLForm Settings
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate"></param>
            <param name="isvsync"></param>
            <param name="isshowcursor"></param>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_fBar.text">
            <summary>
            Text to draw Message
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_fBar.ex">
            <summary>
            Hold the Information about the Experiment
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_fBar.Bar">
            <summary>
            RF Mapping Black and White Bars
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_fBar.Rows">
            <summary>
            Mapping Grid Row Number
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.RF_fBar.Columns">
            <summary>
            Mapping Grid Column Number
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.Initialize">
            <summary>
            Init all information of the experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.InitGrid">
            <summary>
            Init Mapping Grid
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.SetFlow">
            <summary>
            Set Flow to control experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.MarkHead">
            <summary>
            Send crucial information in MarkerHeader 
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.Update">
            <summary>
            Update experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.RF_fBar.Draw">
            <summary>
            Draw Stimuli
            </summary>
        </member>
        <member name="T:StiLib.Core.SLGDControl">
            <summary>
            Custom control uses the XNA Framework GraphicsDevice to render onto
            a Windows Form. Derived classes can override the Initialize and Draw
            methods to add their own drawing code.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGDControl.OnCreateControl">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGDControl.Dispose(System.Boolean)">
            <summary>
            Disposes the control.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:StiLib.Core.SLGDControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Redraws the control in response to a WinForms paint message.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLGDControl.BeginDraw">
            <summary>
            Attempts to begin drawing the control. Returns an error message string
            if this was not possible, which can happen if the graphics device is
            lost, or if we are running inside the Form designer.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLGDControl.EndDraw">
            <summary>
            Ends drawing the control. This is called after derived classes
            have finished their Draw method, and is responsible for presenting
            the finished image onto the screen, using the appropriate WinForms
            control handle to make sure it shows up in the right place.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGDControl.HandleDeviceReset">
            <summary>
            Helper used by BeginDraw. This checks the graphics device status,
            making sure it is big enough for drawing the current control, and
            that the device is not lost. Returns an error string if the device
            could not be reset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLGDControl.PaintUsingSystemDrawing(System.Drawing.Graphics,System.String)">
            <summary>
            If we do not have a valid graphics device (for instance if the device
            is lost, or if we are running inside the Form designer), we must use
            regular System.Drawing method to display a status message.
            </summary>
            <param name="graphics"></param>
            <param name="text"></param>
        </member>
        <member name="M:StiLib.Core.SLGDControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Ignores WinForms paint-background messages. The default implementation
            would clear the control to the current background color, causing
            flickering when our OnPaint implementation then immediately draws some
            other color over the top using the XNA Framework GraphicsDevice.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLGDControl.Initialize">
            <summary>
            Derived classes override this to initialize their drawing code.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGDControl.Update">
            <summary>
            Derived classes override this to updata their drawing code.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGDControl.Draw">
            <summary>
            Derived classes override this to draw themselves using the GraphicsDevice.
            </summary>
        </member>
        <member name="P:StiLib.Core.SLGDControl.GraphicsDevice">
            <summary>
            Gets a GraphicsDevice that can be used to draw onto this control.
            </summary>
        </member>
        <member name="P:StiLib.Core.SLGDControl.Services">
            <summary>
            Gets an IServiceProvider containing our IGraphicsDeviceService.
            This can be used with components such as the ContentManager,
            which use this service to look up the GraphicsDevice.
            </summary>
        </member>
        <member name="T:StiLib.Vision.Stimuli.dGrating">
            <summary>
            Drifting Grating Stimulus
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dGrating.#ctor">
            <summary>
            Default SLForm Settings
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dGrating.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Custom SLForm Settings
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate"></param>
            <param name="isvsync"></param>
            <param name="isshowcursor"></param>
        </member>
        <member name="F:StiLib.Vision.Stimuli.dGrating.text">
            <summary>
            Text to draw Message
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.dGrating.ex">
            <summary>
            Hold the Information about the Experiment
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.dGrating.Grating">
            <summary>
            Drifting Grating
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dGrating.Initialize">
            <summary>
            Init all information of the experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dGrating.SetFlow">
            <summary>
            Set Flow to control experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dGrating.MarkHead">
            <summary>
            Send crucial information in MarkerHeader 
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dGrating.Update">
            <summary>
            Update experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dGrating.Draw">
            <summary>
            Draw Stimuli
            </summary>
        </member>
        <member name="T:StiLib.Vision.Stimuli.dBar">
            <summary>
            Drifting Bar
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dBar.#ctor">
            <summary>
            Default SLForm Settings
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dBar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Custom SLForm Settings
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate"></param>
            <param name="isvsync"></param>
            <param name="isshowcursor"></param>
        </member>
        <member name="F:StiLib.Vision.Stimuli.dBar.text">
            <summary>
            Text to draw Message
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.dBar.ex">
            <summary>
            Hold the Information about the Experiment
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.dBar.Bar">
            <summary>
            Drifting Bar
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dBar.Initialize">
            <summary>
            Init all information of the experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dBar.SetFlow">
            <summary>
            Set Flow to control experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dBar.MarkHead">
            <summary>
            Send crucial information in MarkerHeader 
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dBar.Update">
            <summary>
            Update experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.dBar.Draw">
            <summary>
            Draw Stimuli
            </summary>
        </member>
        <member name="T:StiLib.Vision.Grating">
            <summary>
            StiLib Grating Stimulus
            </summary>
        </member>
        <member name="T:StiLib.Vision.VisionStimulus">
            <summary>
            Vision stimulus base class
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.distance2display">
            <summary>
            Perpendicular Distance from eye to display (mm), Usually Map 1deg Visual Angle to 10mm on Display 
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.displayratio">
            <summary>
            Display AspectRatio (Width : Height), 1.333(4:3) or 1.778(16:9)
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.displaysize">
            <summary>
            Display Size (Viewable Diagonal Length in Inch (1 Inch = 25.4mm), 17inch: 15, 22inch: 20 )
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.view_h_mm">
            <summary>
            Current Display viewable height in mm
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.view_w_mm">
            <summary>
            Current Display viewable width in mm
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.view_h_pixel">
            <summary>
            Current Display viewable height in pixel
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.view_w_pixel">
            <summary>
            Current Display viewable width in pixel
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.view_h_deg">
            <summary>
            Current Display viewable height in visual angle degree
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.view_w_deg">
            <summary>
            Current Display viewable width in visual angle degree
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.mm_p_deg">
            <summary>
            Current Display Size (MM) per Visual Angle (Deg)
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.pixel_p_deg">
            <summary>
            Current Full Screen Resolution (Pixel) per Visual Angle (Deg)
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.pixel_p_mm">
            <summary>
            Current Full Screen Resolution (Pixel) per Display Size (MM)
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.gcamera">
            <summary>
            Global Camera
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.unit">
            <summary>
            Global Unit
            </summary>
        </member>
        <member name="F:StiLib.Vision.VisionStimulus.ufactor">
            <summary>
            Current Global Unit Conversion Factor
            </summary>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.#ctor">
            <summary>
            Init to default settings -- distance2display:570mm, displayratio:1.333, displaysize:20inch, 
            fullscreen_w_p:800, fullscreen_h_p:600, camera:default, unit:Deg
            </summary>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init to default settings -- distance2display:570mm, displayratio:1.333, displaysize:20inch, unit:Deg
            and current GraphicsDevice fullscreen resolution and viewport
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.#ctor(System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.Unit)">
            <summary>
            Init to custom settings according to current GraphicsDevice
            </summary>
            <param name="distance"></param>
            <param name="ratio"></param>
            <param name="size"></param>
            <param name="gd"></param>
            <param name="u"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.#ctor(System.Single,System.Single,System.Single,System.Int32,System.Int32,StiLib.Core.SLCamera,StiLib.Vision.Unit)">
            <summary>
            Init to custom settings
            </summary>
            <param name="distance">distance2display</param>
            <param name="ratio">displayratio</param>
            <param name="size">displaysize</param>
            <param name="fullscreen_w_p">full screen resolution pixel in width</param>
            <param name="fullscreen_h_p">full screen resolution pixel in height</param>
            <param name="cam">Global Camera</param>
            <param name="u">Global Unit</param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.SetConfigPara(System.Single,System.Single,System.Single,System.Int32,System.Int32,StiLib.Core.SLCamera,StiLib.Vision.Unit)">
            <summary>
            Set Configuration Parameters
            </summary>
            <param name="distance">distance2display</param>
            <param name="ratio">displayratio</param>
            <param name="size">displaysize</param>
            <param name="fullscreen_w_p">full screen resolution pixel in width</param>
            <param name="fullscreen_h_p">full screen resolution pixel in height</param>
            <param name="cam">Global Camera</param>
            <param name="u">Global Unit</param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.Config">
            <summary>
            Setup Visual Environment according to Config Parameters after SetConfigPara() Method
            </summary>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.InitVS(System.Single,System.Single,System.Single,System.Int32,System.Int32,StiLib.Core.SLCamera,StiLib.Vision.Unit)">
            <summary>
            Initialize all configuration
            </summary>
            <param name="distance">distance2display</param>
            <param name="ratio">displayratio</param>
            <param name="size">displaysize</param>
            <param name="fullscreen_w_p">full screen resolution pixel in width</param>
            <param name="fullscreen_h_p">full screen resolution pixel in height</param>
            <param name="cam">Global Camera</param>
            <param name="u">Global Unit</param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.InitVS(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to current GraphicsDevice fullscreen resolution and viewport
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.GlobalView">
            <summary>
            Get Global Camera View Matrix
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.GlobalProj">
            <summary>
            Get Global Camera Unified Projection Matrix
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.LoadContent(System.IServiceProvider,System.String)">
            <summary>
            Load Stimulus Content
            </summary>
            <param name="service"></param>
            <param name="path"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init Stimulus according to internal parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.Draw(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Draw Stimulus
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.SetWorld(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set World Transform
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.SetView(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set View Transform
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.SetProjection(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set Projection Transform
            </summary>
            <param name="proj"></param>
        </member>
        <member name="M:StiLib.Vision.VisionStimulus.SetVisible(System.Boolean)">
            <summary>
            Set Visible State
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="P:StiLib.Vision.VisionStimulus.GlobalProjType">
            <summary>
            Global Projection Type
            </summary>
        </member>
        <member name="F:StiLib.Vision.Grating.Para">
            <summary>
            Grating Parameters
            </summary>
        </member>
        <member name="M:StiLib.Vision.Grating.#ctor">
            <summary>
            Set Grating Parameters to default before LoadContent() and Init()
            </summary>
        </member>
        <member name="M:StiLib.Vision.Grating.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String)">
            <summary>
            Init Grating to default
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String,System.String)">
            <summary>
            Init Grating to custom settings
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="shader"></param>
            <param name="technique"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,StiLib.Vision.GratingPara)">
            <summary>
            Init Grating to custom settings and default -- Shader:"Grating", Technique:"Technique1"
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="gratingpara"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String,System.String,StiLib.Vision.GratingPara)">
            <summary>
            Init Grating to custom settings
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="gratingpara"></param>
            <param name="shader"></param>
            <param name="technique"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.LoadContent(System.IServiceProvider,System.String)">
            <summary>
            Load default shader "Grating" and "Technique1"
            </summary>
            <param name="service"></param>
            <param name="path"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.LoadContent(System.IServiceProvider,System.String,System.String,System.String)">
            <summary>
            Load Grating Shader and Technique
            </summary>
            <param name="service"></param>
            <param name="path"></param>
            <param name="shader"></param>
            <param name="technique"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to internal grating parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.GratingPara)">
            <summary>
            Init Grating according to gratingpara
            </summary>
            <param name="gd"></param>
            <param name="gratingpara"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetVertex">
            <summary>
            Initialize Grating Vertex
            </summary>
        </member>
        <member name="M:StiLib.Vision.Grating.Draw(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Draw Grating
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetWorld(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set Effect's World matrix
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetView(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set Effect's View matrix
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetProjection(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set Effect's Projection matrix
            </summary>
            <param name="proj"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetVisible(System.Boolean)">
            <summary>
            Set visible state
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetTime(System.Single)">
            <summary>
            Set effect's Time Parameter
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetSF(System.Single)">
            <summary>
            Set Spatial Frequency
            </summary>
            <param name="sf"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetDiameter(System.Single)">
            <summary>
            Set Grating Diameter
            </summary>
            <param name="diameter"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetTF(System.Single)">
            <summary>
            Set Temporal Frequency
            </summary>
            <param name="tf"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetSPhase(System.Single)">
            <summary>
            Set Spatial Phase
            </summary>
            <param name="sphase"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetResolution(System.Int32)">
            <summary>
            Set Grating Interpolation Resolution
            </summary>
            <param name="res"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetGratingType(StiLib.Vision.GratingType)">
            <summary>
            Set Grating Type
            </summary>
            <param name="gtype"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetShape(StiLib.Vision.Shape)">
            <summary>
            Set Grating Shape
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.ColorFactor">
            <summary>
            Get Luminance and Contrast Constrains 
            </summary>
        </member>
        <member name="M:StiLib.Vision.Grating.SetMaxMinColor">
            <summary>
            Get Color Interpolation Profile according to Luminance and Contrast
            </summary>
        </member>
        <member name="M:StiLib.Vision.Grating.SetMaxMinColor(Microsoft.Xna.Framework.Vector4,Microsoft.Xna.Framework.Vector4)">
            <summary>
            Get Color Interpolation Profile according to custom colors
            </summary>
            <param name="max"></param>
            <param name="min"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetTransparency(System.Single)">
            <summary>
            Set Grating Transparency
            </summary>
            <param name="a">0-1</param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetLum_Con(System.Single,System.Single)">
            <summary>
            Set Luminance and Contrast
            </summary>
            <param name="lum"></param>
            <param name="con"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetMask(StiLib.Vision.MaskType)">
            <summary>
            Set Mask
            </summary>
            <param name="mtype"></param>
        </member>
        <member name="M:StiLib.Vision.Grating.SetSigma(System.Single)">
            <summary>
            Set Gaussian Mask Sigma Parameter
            </summary>
            <param name="sigma"></param>
        </member>
        <member name="P:StiLib.Vision.Grating.Effect">
            <summary>
            Grating Effect
            </summary>
        </member>
        <member name="P:StiLib.Vision.Grating.Content">
            <summary>
            Grating Content Manager
            </summary>
        </member>
        <member name="P:StiLib.Vision.Grating.MaxColor">
            <summary>
            Get Grating Peak Color
            </summary>
        </member>
        <member name="P:StiLib.Vision.Grating.MinColor">
            <summary>
            Get Grating Trough Color
            </summary>
        </member>
        <member name="T:StiLib.Hearing.HearingStimulus">
            <summary>
            Hearing stimulus base class
            </summary>
        </member>
        <member name="T:StiLib.Core.SLKeyValuePair`3">
            <summary>
            StiLib Two Keys/One Value Pair Structure
            </summary>
        </member>
        <member name="M:StiLib.Core.SLKeyValuePair`3.#ctor(`0,`1,`2)">
            <summary>
            Create a new 2Keys/1Value Pair
            </summary>
            <param name="pK"></param>
            <param name="sK"></param>
            <param name="v"></param>
        </member>
        <member name="M:StiLib.Core.SLKeyValuePair`3.ToString">
            <summary>
            Returns a string representation of the SLKeyValuePair.
            </summary>
            <returns></returns>
        </member>
        <member name="P:StiLib.Core.SLKeyValuePair`3.PKEY">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:StiLib.Core.SLKeyValuePair`3.SKEY">
            <summary>
            Secondary Key
            </summary>
        </member>
        <member name="P:StiLib.Core.SLKeyValuePair`3.VALUE">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:StiLib.Core.SLRandom">
            <summary>
            StiLib Randomization Service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLRandom.srand(System.UInt32)">
            <summary>
            Set Random Seed using C runtime library
            </summary>
            <param name="seed"></param>
        </member>
        <member name="M:StiLib.Core.SLRandom.rand">
            <summary>
            Get Random Integer using C runtime library
            </summary>
            <returns></returns>
        </member>
        <member name="F:StiLib.Core.SLRandom.RSeed">
            <summary>
            Seed to Generate Random Sequence
            </summary>
        </member>
        <member name="F:StiLib.Core.SLRandom.RSequence">
            <summary>
            Random Sequence
            </summary>
        </member>
        <member name="M:StiLib.Core.SLRandom.#ctor">
            <summary>
            Init to default random sequence length: 2000
            </summary>
        </member>
        <member name="M:StiLib.Core.SLRandom.#ctor(System.Int32)">
            <summary>
            Init with custom Random Sequence Length
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:StiLib.Core.SLRandom.SetSequenceLength(System.Int32)">
            <summary>
            Set Random Sequence Length
            </summary>
            <param name="Length"></param>
        </member>
        <member name="M:StiLib.Core.SLRandom.RandomizeSeed">
            <summary>
            Get time-dependent randomized seed(0-199) to generate random sequence
            </summary>
        </member>
        <member name="M:StiLib.Core.SLRandom.RandomizeSequence(System.Int32)">
            <summary>
            Use RSeed and C Library rand() method to generate a shuffled 0-N sequence
            </summary>
            <param name="N"></param>
        </member>
        <member name="M:StiLib.Core.SLRandom.RandomizeSequence(StiLib.Core.RandomMethod,System.Int32)">
            <summary>
            Use RSeed and custom method to generate a shuffled 0-N sequence
            </summary>
            <param name="method"></param>
            <param name="N"></param>
        </member>
        <member name="M:StiLib.Core.SLRandom.Randomize_C(System.Int32)">
            <summary>
            generate a shuffled 0-N sequence using C Library rand() method
            </summary>
            <param name="N"></param>
        </member>
        <member name="M:StiLib.Core.SLRandom.Randomize_NET(System.Int32)">
            <summary>
            generate a shuffled 0-N sequence using .NET Random Class
            </summary>
            <param name="N"></param>
        </member>
        <member name="P:StiLib.Core.SLRandom.RandomMethod">
            <summary>
            Get Current Random Method
            </summary>
        </member>
        <member name="T:StiLib.Core.SLTimer">
            <summary>
            StiLib Timing Service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLTimer.Rest(System.Double)">
            <summary>
            Do nothing but Rest a Precise Time Interval
            </summary>
            <param name="restT">rest time in second</param>
        </member>
        <member name="M:StiLib.Core.SLTimer.ReStart">
            <summary>
            Stop, Reset and Start
            </summary>
        </member>
        <member name="P:StiLib.Core.SLTimer.ElapsedSeconds">
            <summary>
            Get Total Seconds Elapsed since last Start()
            </summary>
        </member>
        <member name="T:StiLib.Core.SLIO">
            <summary>
            Direct Access to I/O Port and Physical Memory Using WinIo Library
            </summary>
        </member>
        <member name="M:StiLib.Core.SLIO.InitializeWinIo">
            <summary>
            The InitializeWinIo must be called first
            </summary>
            <returns>true -- succeed, false -- failed</returns>
        </member>
        <member name="M:StiLib.Core.SLIO.ShutdownWinIo">
            <summary>
            The ShutdownWinIo must be called at end
            </summary>
        </member>
        <member name="M:StiLib.Core.SLIO.GetPortVal(System.Int16,System.Int32[],System.Byte)">
            <summary>
            Read 1, 2, 4 bytes from the specified I/O port
            </summary>
            <param name="wPortAddr">port address</param>
            <param name="pdwPortVal">Int32 Pointer to the received value</param>
            <param name="bSize">number of bytes to read</param>
            <returns>true -- succeed, false -- failed</returns>
        </member>
        <member name="M:StiLib.Core.SLIO.SetPortVal(System.Int16,System.Int32,System.Byte)">
            <summary>
            Write 1, 2, 4 bytes to the specified I/O port
            </summary>
            <param name="wPortAddr">port address</param>
            <param name="dwPortVal">value to be written</param>
            <param name="bSize">number of bytes to write</param>
            <returns>true -- succeed, false -- failed</returns>
        </member>
        <member name="M:StiLib.Core.SLIO.#ctor">
            <summary>
            Init WinIo Library
            </summary>
        </member>
        <member name="M:StiLib.Core.SLIO.Finalize">
            <summary>
            Shutdown WinIo
            </summary>
        </member>
        <member name="M:StiLib.Core.SLIO.TTL(System.Int16)">
            <summary>
            IO Port TTL
            </summary>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="P:StiLib.Core.SLIO.IsWinIOok">
            <summary>
            If WinIO OK
            </summary>
        </member>
        <member name="T:StiLib.Core.ParallelPort">
            <summary>
            SLIO Parallel Port and TTL Time Coding
            </summary>
        </member>
        <member name="F:StiLib.Core.ParallelPort.timer">
            <summary>
            Timer
            </summary>
        </member>
        <member name="M:StiLib.Core.ParallelPort.#ctor">
            <summary>
            Init
            </summary>
        </member>
        <member name="M:StiLib.Core.ParallelPort.Trigger(System.Int16,System.Double)">
            <summary>
            A 'time' ms TTL Pulse on 'port'
            </summary>
            <param name="port"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.ParallelPort.Trigger">
            <summary>
            A 1ms TTL Pulse on parallel port 0x378
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.ParallelPort.Marker(System.Int32)">
            <summary>
            Two Trigger to encode a number based on 5ms interval
            </summary>
            <param name="N"></param>
        </member>
        <member name="M:StiLib.Core.ParallelPort.MarkerEncode(System.Int32)">
            <summary>
            Encode number in two Markers based on 100 number system which can encode 100×100=10000 numbers
            </summary>
            <param name="N"></param>
        </member>
        <member name="M:StiLib.Core.ParallelPort.MarkerEndEncode">
            <summary>
            Encode(0,100) the end of MarkerEncode
            </summary>
        </member>
        <member name="T:StiLib.Core.FlowControl">
            <summary>
            Experiment Flow Control
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.IsStiOn">
            <summary>
            If To Begin a Stimulus
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.IsPred">
            <summary>
            If Pre-Stimulus Operation has done
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.IsRested">
            <summary>
            If Rest Operation has done
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.IsBlanked">
            <summary>
            If Blank Operation has done
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.PreDurTime">
            <summary>
            PreTime + DurTime
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.StiTime">
            <summary>
            Total Time of a Stimulus
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.LastTime">
            <summary>
            Stimulus Lasting Time
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.BCount">
            <summary>
            Counter of Block
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.TCount">
            <summary>
            Counter of Trial
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.SCount">
            <summary>
            Counter of Stimulus
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.RCount">
            <summary>
            Counter of Rows
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.CCount">
            <summary>
            Counter of Columns
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.Which">
            <summary>
            Index of Stimulus
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.Rotate">
            <summary>
            Rotate Matrix
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.Scale">
            <summary>
            Scale Matrix
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.Translate">
            <summary>
            Translate Matrix
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.Info">
            <summary>
            Experiment Information
            </summary>
        </member>
        <member name="P:StiLib.Core.FlowControl.Location">
            <summary>
            Location of Stimulus
            </summary>
        </member>
        <member name="T:StiLib.Core.ServiceContainer">
            <summary>
            StiLib Service Container
            </summary>
        </member>
        <member name="M:StiLib.Core.ServiceContainer.AddService``1(``0)">
            <summary>
            Add a new service to the services collection
            </summary>
        </member>
        <member name="M:StiLib.Core.ServiceContainer.GetService(System.Type)">
            <summary>
            Looks up the specified service
            </summary>
        </member>
        <member name="T:StiLib.Core.SystemInfo">
            <summary>
            Get System Information
            </summary>
        </member>
        <member name="M:StiLib.Core.SystemInfo.#ctor">
            <summary>
            Init
            </summary>
        </member>
        <member name="P:StiLib.Core.SystemInfo.ProcessPriority">
            <summary>
            Current Process Priority
            </summary>
        </member>
        <member name="P:StiLib.Core.SystemInfo.ProcessID">
            <summary>
            Get Current Process ID
            </summary>
        </member>
        <member name="P:StiLib.Core.SystemInfo.MainModule">
            <summary>
            Get current main module
            </summary>
        </member>
        <member name="P:StiLib.Core.SystemInfo.ProcessName">
            <summary>
            Get current process name
            </summary>
        </member>
        <member name="T:StiLib.Core.FrameInfo">
            <summary>
            Monitor Frame Information
            </summary>
        </member>
        <member name="M:StiLib.Core.FrameInfo.#ctor">
            <summary>
            Init
            </summary>
        </member>
        <member name="M:StiLib.Core.FrameInfo.Update">
            <summary>
            Update Frame Information
            </summary>
        </member>
        <member name="M:StiLib.Core.FrameInfo.Clear">
            <summary>
            Clear all frame info and reset to begin state
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.IFI">
            <summary>
            Get Inter-Frame Interval List
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.TotalFrames">
            <summary>
            Get Total Frames Number
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.TotalTime">
            <summary>
            Get Total Frame Time
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.MeanIFI">
            <summary>
            Get Mean IFI
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.StdIFI">
            <summary>
            Get Standard Deviation of IFIs
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.MaxIFI">
            <summary>
            Get Maximum IFI
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.MinIFI">
            <summary>
            Get Minimum IFI
            </summary>
        </member>
        <member name="P:StiLib.Core.FrameInfo.FPS">
            <summary>
            Get Instant Frame Rate per Second
            </summary>
        </member>
        <member name="T:StiLib.Core.ExDesign">
            <summary>
            Experiment Design Parameters
            </summary>
        </member>
        <member name="M:StiLib.Core.ExDesign.#ctor(StiLib.Core.ExType[],StiLib.Core.ExPara[],System.Int32[],System.Int32,System.Int32,System.Int32[],System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Init to custom experiment design
            </summary>
            <param name="extype">Experiment Type</param>
            <param name="expara">Condition Parameters</param>
            <param name="cond">Conditions Number</param>
            <param name="block">Experiment Block Number</param>
            <param name="trial">Experiment Trials</param>
            <param name="stimuli">Stimulus Numbers</param>
            <param name="brestT">Rest Time Between Blocks</param>
            <param name="trestT">Rest Time Between Trials</param>
            <param name="srestT">Rest Time Between Stimulus</param>
            <param name="preT"> Pre-Stimulus Time</param>
            <param name="durT">Stimulus Duration Time</param>
            <param name="posT"> Post-Stimulus Time</param>
            <param name="bgcolor">Experiment BackGround Color</param>
        </member>
        <member name="M:StiLib.Core.ExDesign.SetPara(StiLib.Core.ExType[],StiLib.Core.ExPara[],System.Int32[],System.Int32,System.Int32,System.Int32[],System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Set to custom experiment design
            </summary>
            <param name="extype">Experiment Type</param>
            <param name="expara">Condition Parameters</param>
            <param name="cond">Conditions Number</param>
            <param name="block">Experiment Block Number</param>
            <param name="trial">Experiment Trials</param>
            <param name="stimuli">Stimulus Numbers</param>
            <param name="brestT">Rest Time Between Blocks</param>
            <param name="trestT">Rest Time Between Trials</param>
            <param name="srestT">Rest Time Between Stimulus</param>
            <param name="preT"> Pre-Stimulus Time</param>
            <param name="durT">Stimulus Duration Time</param>
            <param name="posT"> Post-Stimulus Time</param>
            <param name="bgcolor">Experiment BackGround Color</param>
        </member>
        <member name="F:StiLib.Core.ExDesign.exType">
            <summary>
            Experiment Type
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.exPara">
            <summary>
            Experiment Condition Parameters
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.condition">
            <summary>
            Experiment Conditions Number
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.block">
            <summary>
            Experiment Blocks
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.trial">
            <summary>
            Stimulus Trials
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.stimuli">
            <summary>
            Stimulus Number
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.brestT">
            <summary>
            Rest Time Between Blocks
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.trestT">
            <summary>
            Rest Time Between Trials
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.srestT">
            <summary>
            Rest Time Between Stimulus
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.preT">
            <summary>
            Stimulus Pre-duration Time
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.durT">
            <summary>
            Stimulus Duration Time
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.posT">
            <summary>
            Stimulus Post-duration Time
            </summary>
        </member>
        <member name="F:StiLib.Core.ExDesign.bgcolor">
            <summary>
            Experiment BackGround Color
            </summary>
        </member>
        <member name="P:StiLib.Core.ExDesign.Default">
            <summary>
            Get default experiment design -- all None or zero with array size:10
            </summary>
        </member>
        <member name="T:StiLib.Core.ExType">
            <summary>
            Pre-Defined Experiment Types
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.None">
            <summary>
            No Type
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.dBar">
            <summary>
            Drifting Bar
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.RF_dBar">
            <summary>
            Drifting Bar RF Mapping
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.fBar">
            <summary>
            Flashing Bar
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.RF_fBar">
            <summary>
            Flashing Bar RF Mapping
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.dGrating">
            <summary>
            Drifting Grating
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.fGrating">
            <summary>
            Standing Grating
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.Plaid">
            <summary>
            Plaid is composed of two gratings with angle between their directions
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.RandomLine">
            <summary>
            Randomly Distributated Bars Moving at certain or different directions
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.OpticFlow">
            <summary>
            Local Motion Visual Field Optic Flow
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.Two_dBar">
            <summary>
            Two Drifting Bars with angle between their directions
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.Two_dGrating">
            <summary>
            Two Drifting Gratings with angle between their directions
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.Two_fBar">
            <summary>
            Two Flashing Bars with angle between their orientations
            </summary>
        </member>
        <member name="F:StiLib.Core.ExType.Two_fGrating">
            <summary>
            Two Flashing Gratings with angle between their orientations
            </summary>
        </member>
        <member name="T:StiLib.Core.ExPara">
            <summary>
            Pre-Defined Experiment Parameters
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.None">
            <summary>
            No Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.Orientation">
            <summary>
            Orientation Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.Direction">
            <summary>
            Moving Direction Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.Speed">
            <summary>
            Moving Speed Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.Luminance">
            <summary>
            Uniform Luminance Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.Contrast">
            <summary>
            Uniform Contrast Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.SpatialFreq">
            <summary>
            Spatial Change Frequency Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.SpatialPhase">
            <summary>
            Spatial Phase Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.TemporalFreq">
            <summary>
            Temporal Change Frequency Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.TemporalPhase">
            <summary>
            Temporal Phase Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.Color">
            <summary>
            Color Condition
            </summary>
        </member>
        <member name="F:StiLib.Core.ExPara.Disparity">
            <summary>
            Disparity Condition
            </summary>
        </member>
        <member name="T:StiLib.Core.RandomMethod">
            <summary>
            Pre-Defined Method to generate random number
            </summary>
        </member>
        <member name="F:StiLib.Core.RandomMethod.None">
            <summary>
            No Method
            </summary>
        </member>
        <member name="F:StiLib.Core.RandomMethod.C">
            <summary>
            C srand() and rand() Library in msvcrt.dll
            </summary>
        </member>
        <member name="F:StiLib.Core.RandomMethod.dotNET">
            <summary>
            .NET Random Class
            </summary>
        </member>
        <member name="T:StiLib.Core.SLConstant">
            <summary>
            StiLib Constants
            </summary>
        </member>
        <member name="F:StiLib.Core.SLConstant.Help">
            <summary>
            Standard Help String
            </summary>
        </member>
        <member name="T:StiLib.Core.SLAudio">
            <summary>
            StiLib Audio Service
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.audioEngine">
            <summary>
            Audio Engine for XACT
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.memoryWaveBank">
            <summary>
            Wave bank in memory
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.streamWaveBank">
            <summary>
            Wave bank in streaming
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.soundBank">
            <summary>
            Sound bank
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.activeCues">
            <summary>
            A list of all non-3D cues
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.activeCue3Ds">
            <summary>
            A list of all cue3Ds
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.inactiveCue3Ds">
            <summary>
            A queue that keeps inactive Cue3D instances, so a new instance does not
            need to be created each time a sound is played
            </summary>
        </member>
        <member name="F:StiLib.Core.SLAudio.categories">
            <summary>
            Sound Catagories
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.#ctor">
            <summary>
            Creates a new AudioSystem instance before Initialize()
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Init Audio System
            </summary>
            <param name="settingsFilePath"></param>
            <param name="memoryWBFilePath"></param>
            <param name="streamWBFilePath"></param>
            <param name="SBFilePath"></param>
        </member>
        <member name="M:StiLib.Core.SLAudio.Initialize(System.String,System.String,System.String,System.String)">
            <summary>
            Loads the audio engine, sound bank and wave bank. Must be called before the audio system can be used.
            </summary>
            <param name="settingsFilePath">The filepath to the .xgs file.</param>
            <param name="memoryWBFilePath">The filepath to the .xwb in-memory wave bank.</param>
            <param name="streamWBFilePath">The filepath to the streaming wave bank with default -- offset:0, packetsize:64</param>
            <param name="SBFilePath">The filepath to the .xsb file.</param>
        </member>
        <member name="M:StiLib.Core.SLAudio.LoadCategories(System.String[])">
            <summary>
            Loads the categories into the AudioSystem.
            This allows the system to adjust the volume of the categories with the GolbalVolume.
            </summary>
            <param name="categoryNames"></param>
        </member>
        <member name="M:StiLib.Core.SLAudio.GetCategory(System.String)">
            <summary>
            Gets a sound catagory from the audio engine.
            </summary>
            <param name="categoryName"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLAudio.ApplyGlobalVolume">
            <summary>
            Scales the volume of each AudioCatagory loaded into the AudioSystem.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.Update">
            <summary>
            Updates the AudioSystem.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.Update3DSettings(StiLib.Core.Cue3D)">
            <summary>
            Applies 3D settings to a cue.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.SetGlobalVariable(System.String,System.Single)">
            <summary>
            Sets the value of a global variable.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.GetGlobalVariable(System.String)">
            <summary>
            Gets the value of a global variable.
            </summary>
            <param name="variableName"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLAudio.PauseAll">
            <summary>
            Pauses all cues currently being played.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.Resume">
            <summary>
            Resumes all paused cues played through the AudioSystem.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.Stop(Microsoft.Xna.Framework.Audio.AudioStopOptions)">
            <summary>
            Stops all cues played through the AudioSystem.
            Stopped cues cannot be resumed.
            </summary>
            <param name="stopOptions">Controls how the cues should stop.</param>
        </member>
        <member name="M:StiLib.Core.SLAudio.Play(System.String)">
            <summary>
            Plays a cue
            </summary>
            <param name="cueName">Name of the cue</param>
        </member>
        <member name="M:StiLib.Core.SLAudio.Play(System.String,StiLib.Core.CueVariable[])">
            <summary>
            Plays a cue
            </summary>
            <param name="cueName">Name of the cue</param>
            <param name="variables">Variables to be applied to the cue.</param>
        </member>
        <member name="M:StiLib.Core.SLAudio.Play(Microsoft.Xna.Framework.Audio.Cue,StiLib.Core.CueVariable[])">
            <summary>
            Plays a cue. 
            This method prevents the cue being collected by the garbage collecter while the cue is playing,
            so references to the cue outside of the AudioSystem can be safely lost.
            </summary>
            <param name="cue">The cue to be played</param>
            <param name="variables">Variables to be applied to the cue.</param>
        </member>
        <member name="M:StiLib.Core.SLAudio.Play(System.String,Microsoft.Xna.Framework.Audio.AudioEmitter,StiLib.Core.CueVariable[])">
            <summary>
            Plays a sound in 3D to all the AudioListeners listed in Listeners.
            </summary>
            <param name="cueName">Name of the sound to be played.</param>
            <param name="emitter">The emitter of the sound.</param>
            <remarks>If there are no listeners, then the sound is just played normally.</remarks>
            <param name="variables">Variables to be applied to the cue.</param>
        </member>
        <member name="M:StiLib.Core.SLAudio.StartBgMusic(System.String)">
            <summary>
            Start Playing BackGround Music
            </summary>
            <param name="bgmusic_cue"></param>
        </member>
        <member name="M:StiLib.Core.SLAudio.GetCue(System.String)">
            <summary>
            Gets a cue by name
            </summary>
            <param name="cueName"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLAudio.StopCategory(System.String,Microsoft.Xna.Framework.Audio.AudioStopOptions)">
            <summary>
            Stops a catagory
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.PauseCategory(System.String)">
            <summary>
            Pauses a catagory
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.ResumeCategory(System.String)">
            <summary>
            Resumes a catagory
            </summary>
        </member>
        <member name="M:StiLib.Core.SLAudio.SetVolume(System.String,System.Single)">
            <summary>
            Sets the volume of a catagory
            </summary>
            <param name="categoryName"></param>
            <param name="volume">0-1</param>
        </member>
        <member name="P:StiLib.Core.SLAudio.GlobalVolume">
            <summary>
            The global sound volume.
            </summary>
            <remarks>
            Categories that have not been loaded into the 
            AudioSystem will not have their volume automatically adjusted.
            </remarks>
        </member>
        <member name="P:StiLib.Core.SLAudio.IsInUse">
            <summary>
            Returns whether the sound bank or wave bank is currently in use.
            </summary>
        </member>
        <member name="P:StiLib.Core.SLAudio.IsInitialized">
            <summary>
            States if the audio system has been initialized or not.
            </summary>
        </member>
        <member name="P:StiLib.Core.SLAudio.Listeners">
            <summary>
            A list of all AudioListeners for 3D sound
            </summary>
        </member>
        <member name="T:StiLib.Core.Cue3D">
            <summary>
            Hold informations about a 3D cue.
            </summary>
        </member>
        <member name="F:StiLib.Core.Cue3D.Cues">
            <summary>
            A list of cues, one for each listener.
            </summary>
        </member>
        <member name="F:StiLib.Core.Cue3D.Emitter">
            <summary>
            The emitter of the sound.
            </summary>
        </member>
        <member name="M:StiLib.Core.Cue3D.#ctor(System.Collections.Generic.List{Microsoft.Xna.Framework.Audio.Cue},Microsoft.Xna.Framework.Audio.AudioEmitter)">
            <summary>
            Creates a new Cue3D.
            </summary>
            <param name="cues">A list of cues. One for each AuidoListener.</param>
            <param name="emitter">The emitter of the sound.</param>
        </member>
        <member name="M:StiLib.Core.Cue3D.Play">
            <summary>
            Plays the sound.
            </summary>
        </member>
        <member name="M:StiLib.Core.Cue3D.Pause">
            <summary>
            Pauses the sound.
            </summary>
        </member>
        <member name="M:StiLib.Core.Cue3D.Resume">
            <summary>
            Resumes the sound.
            </summary>
        </member>
        <member name="M:StiLib.Core.Cue3D.Stop(Microsoft.Xna.Framework.Audio.AudioStopOptions)">
            <summary>
            Stops the sound.
            </summary>
            <param name="stopOptions"></param>
        </member>
        <member name="M:StiLib.Core.Cue3D.DisposeCues">
            <summary>
            Disposes all cues.
            </summary>
        </member>
        <member name="T:StiLib.Core.CueVariable">
            <summary>
            Holds information about a cue variable.
            </summary>
        </member>
        <member name="F:StiLib.Core.CueVariable.Name">
            <summary>
            The name of the variable.
            </summary>
        </member>
        <member name="F:StiLib.Core.CueVariable.Value">
            <summary>
            The value of the variable.
            </summary>
        </member>
        <member name="M:StiLib.Core.CueVariable.Apply(Microsoft.Xna.Framework.Audio.Cue)">
            <summary>
            Applies the value of the variable to the specified cue instance.
            </summary>
            <param name="cue">Cue that contains the variable to be set.</param>
        </member>
        <member name="T:StiLib.Vision.SLQuad">
            <summary>
            StiLib Quad
            </summary>
        </member>
        <member name="F:StiLib.Vision.SLQuad.Para">
            <summary>
            Quad Structure
            </summary>
        </member>
        <member name="M:StiLib.Vision.SLQuad.#ctor">
            <summary>
            Set Quad parameters to default before LoadContent() and Init()
            </summary>
        </member>
        <member name="M:StiLib.Vision.SLQuad.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String)">
            <summary>
            Init SLQuad to default
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="tex"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String,StiLib.Vision.Quad)">
            <summary>
            Init SLQuad to custom settings
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="tex"></param>
            <param name="q"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.LoadContent(System.IServiceProvider,System.String,System.String)">
            <summary>
            Load Quad Texture
            </summary>
            <param name="service"></param>
            <param name="path"></param>
            <param name="tex"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to internal quad parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.Quad)">
            <summary>
            Init SLQuad according to custom quad
            </summary>
            <param name="gd"></param>
            <param name="q"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.Draw(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Draw SLQuad
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.SetWorld(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect world matrix
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.SetView(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect view matrix
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.SetProjection(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect projection matrix
            </summary>
            <param name="proj"></param>
        </member>
        <member name="M:StiLib.Vision.SLQuad.SetVisible(System.Boolean)">
            <summary>
            Set visible state
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="P:StiLib.Vision.SLQuad.Effect">
            <summary>
            SLQuad Basic Effect
            </summary>
        </member>
        <member name="P:StiLib.Vision.SLQuad.Content">
            <summary>
            SLQuad Content Manager
            </summary>
        </member>
        <member name="T:StiLib.Vision.Quad">
            <summary>
            Quad Structure
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.BasePara">
            <summary>
            Basic Parameter
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.UpperLeft">
            <summary>
            UpperLeft
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.LowerLeft">
            <summary>
            LowerLeft
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.UpperRight">
            <summary>
            UpperRight
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.LowerRight">
            <summary>
            LowerRight
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.Up">
            <summary>
            Up
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.Vertices">
            <summary>
            Vertex Array
            </summary>
        </member>
        <member name="F:StiLib.Vision.Quad.Indices">
            <summary>
            Index Array
            </summary>
        </member>
        <member name="M:StiLib.Vision.Quad.#ctor(System.Single,System.Single)">
            <summary>
            Init to default -- Center:(0,0,0), Normal:(0,0,1), Up:(0,1,0)
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:StiLib.Vision.Quad.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,System.Single)">
            <summary>
            Init to custom settings
            </summary>
            <param name="center"></param>
            <param name="normal"></param>
            <param name="up"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:StiLib.Vision.Quad.Default">
            <summary>
            Get a default quad -- Width:15, Height:5
            </summary>
        </member>
        <member name="T:StiLib.Vision.Bar">
            <summary>
            StiLib Bar Stimulus
            </summary>
        </member>
        <member name="F:StiLib.Vision.Bar.Para">
            <summary>
            Bar Parameters
            </summary>
        </member>
        <member name="F:StiLib.Vision.Bar.barvertex">
            <summary>
            Bar Vertex Array
            </summary>
        </member>
        <member name="M:StiLib.Vision.Bar.#ctor">
            <summary>
            Set bar parameters to default before Init()
            </summary>
        </member>
        <member name="M:StiLib.Vision.Bar.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init Bar to default
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.BarPara)">
            <summary>
            Init Bar to custom settings
            </summary>
            <param name="gd"></param>
            <param name="barpara"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to internal bar parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.BarPara)">
            <summary>
            Init Bar according to barpara
            </summary>
            <param name="gd"></param>
            <param name="barpara"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.Draw(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Draw Bar
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.SetWorld(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect world matrix
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.SetView(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect view matrix
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.SetProjection(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect projection matrix
            </summary>
            <param name="proj"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.SetVisible(System.Boolean)">
            <summary>
            Set visible state
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.ScaleSize(System.Single)">
            <summary>
            Scale Bar Size
            </summary>
            <param name="x">Scale Multiple Factor</param>
        </member>
        <member name="M:StiLib.Vision.Bar.Scale_Width(System.Single)">
            <summary>
            Scale Bar Width
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.Scale_Height(System.Single)">
            <summary>
            Scale Bar Height
            </summary>
            <param name="x"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.SetSize(System.Single,System.Single)">
            <summary>
            Set Bar Size
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.SetColor(Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Set Bar Vertex Color
            </summary>
            <param name="L_T">Left_Top Vertex Color</param>
            <param name="R_T">Right_Top Vertex Color</param>
            <param name="L_B">Left_Bottom Vertex Color</param>
            <param name="R_B">Right_Bottom Vertex Color</param>
        </member>
        <member name="M:StiLib.Vision.Bar.SetColor(Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Set Bar a Uniform Color
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:StiLib.Vision.Bar.ScaleColor(System.Single)">
            <summary>
            Scale Bar Color
            </summary>
            <param name="x">Scale Adding Factor</param>
        </member>
        <member name="M:StiLib.Vision.Bar.ReverseColor">
            <summary>
            Reverse Bar Color
            </summary>
        </member>
        <member name="P:StiLib.Vision.Bar.Effect">
            <summary>
            Bar Basic Effect
            </summary>
        </member>
        <member name="T:StiLib.Vision.Primitive">
            <summary>
            Visual Primitive Class using VertexPositionColor
            </summary>
        </member>
        <member name="M:StiLib.Vision.Primitive.#ctor">
            <summary>
            Set primitive parameters to default before Init()
            </summary>
        </member>
        <member name="M:StiLib.Vision.Primitive.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init to default
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.PrimitivePara)">
            <summary>
            Init to custom settings
            </summary>
            <param name="gd"></param>
            <param name="Ppara"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to internal primitive parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.PrimitivePara)">
            <summary>
            Init according to custom primitive parameters
            </summary>
            <param name="gd"></param>
            <param name="para"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.VertexDraw(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.PrimitiveType)">
            <summary>
            Draw Primitive's all vertices according to vertexbuffer
            </summary>
            <param name="gd"></param>
            <param name="ptype"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.IndexDraw(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.PrimitiveType)">
            <summary>
            Draw Primitive's all vertices according to indexbuffer
            </summary>
            <param name="gd"></param>
            <param name="ptype"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.Draw(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Boolean,Microsoft.Xna.Framework.Graphics.PrimitiveType,System.Int32,System.Int32)">
            <summary>
            Draw Primitive
            </summary>
            <param name="gd"></param>
            <param name="isindexdraw"></param>
            <param name="ptype"></param>
            <param name="start"></param>
            <param name="pcount"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.ReSetVB(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Reset Vertex Buffer from Primitive Parameter's vertices
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.ReSetIB(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Reset Index Buffer from Primitive Parameter's indices
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.ChangeColor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Change Primitive to a uniform color
            </summary>
            <param name="gd"></param>
            <param name="color"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.SetWorld(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect world matrix
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.SetView(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect view matrix
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.SetProjection(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set effect projection matrix
            </summary>
            <param name="proj"></param>
        </member>
        <member name="M:StiLib.Vision.Primitive.SetVisible(System.Boolean)">
            <summary>
            Set Primitive Visible State
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="P:StiLib.Vision.Primitive.PPara">
            <summary>
            Primitive Parameters
            </summary>
        </member>
        <member name="P:StiLib.Vision.Primitive.Effect">
            <summary>
            Primitive Basic Effect
            </summary>
        </member>
        <member name="T:StiLib.Core.SLExperiment">
            <summary>
            StiLib Experiment Design Parameters and Control Services
            </summary>
        </member>
        <member name="F:StiLib.Core.SLExperiment.Extype">
            <summary>
            Experiment Type
            </summary>
        </member>
        <member name="F:StiLib.Core.SLExperiment.Cond">
            <summary>
            Experiment Design Conditions
            </summary>
        </member>
        <member name="F:StiLib.Core.SLExperiment.Expara">
            <summary>
            Experiment Design Parameters
            </summary>
        </member>
        <member name="F:StiLib.Core.SLExperiment.Flow">
            <summary>
            Flow Control Service
            </summary>
        </member>
        <member name="F:StiLib.Core.SLExperiment.PPort">
            <summary>
            Parallel Port Service
            </summary>
        </member>
        <member name="F:StiLib.Core.SLExperiment.Rand">
            <summary>
            Randomization Service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLExperiment.#ctor">
            <summary>
            Init to default
            </summary>
        </member>
        <member name="M:StiLib.Core.SLExperiment.#ctor(StiLib.Core.ExDesign,System.Int32)">
            <summary>
            Init with empty Experiment Type and Conditions
            </summary>
            <param name="design"></param>
            <param name="length"></param>
        </member>
        <member name="M:StiLib.Core.SLExperiment.#ctor(System.Int32,System.Int32,System.Int32[],System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Color,System.Int32)">
            <summary>
            Init with empty Experiment Type and Conditions
            </summary>
            <param name="block"></param>
            <param name="trial"></param>
            <param name="nstimuli"></param>
            <param name="brestT"></param>
            <param name="trestT"></param>
            <param name="srestT"></param>
            <param name="preT"></param>
            <param name="durT"></param>
            <param name="posT"></param>
            <param name="bgcolor"></param>
            <param name="length"></param>
        </member>
        <member name="M:StiLib.Core.SLExperiment.AddExType(StiLib.Core.ExType)">
            <summary>
            Add Pre-Defined Experiment Type
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:StiLib.Core.SLExperiment.AddExType(System.String,System.Int32)">
            <summary>
            Add custom experiment type's name(string) and code(int)
            </summary>
            <param name="name"></param>
            <param name="code"></param>
        </member>
        <member name="M:StiLib.Core.SLExperiment.AddCondition(StiLib.Core.ExPara,System.Int32)">
            <summary>
            Add Pre-Defined Experiment Condition Parameter and Condition Number
            </summary>
            <param name="para"></param>
            <param name="value"></param>
        </member>
        <member name="M:StiLib.Core.SLExperiment.AddCondition(System.String,System.Int32,System.Int32)">
            <summary>
            Add custom experiment design's condition parmeter name(string), code(int) and condition number
            </summary>
            <param name="paraname"></param>
            <param name="code"></param>
            <param name="value"></param>
        </member>
        <member name="T:StiLib.Vision.SLTexture">
            <summary>
            StiLib Texture
            </summary>
        </member>
        <member name="T:StiLib.Core.SLCalib">
            <summary>
            StiLib Calibration Service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLCalib.#ctor">
            <summary>
            Create a ColorCal_USB calibration service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLCalib.#ctor(StiLib.Core.CalDevice)">
            <summary>
            Create a custom calibration device
            </summary>
            <param name="devicetype"></param>
        </member>
        <member name="M:StiLib.Core.SLCalib.ReadColor(System.Double@,System.Double@,System.Double@)">
            <summary>
            Read a colour in CIE x,y,l from the device.
            </summary>
            <param name="CieX"></param>
            <param name="CieY"></param>
            <param name="CieLum"></param>
        </member>
        <member name="P:StiLib.Core.SLCalib.ReadLuminance">
            <summary>
            Read a luminance value in cd/m2 from device
            To convert this to fL, divide by 3.426259101
            </summary>
        </member>
        <member name="P:StiLib.Core.SLCalib.ReadVoltage">
            <summary>
            Read a voltage (in Volts) value from the device.
            To convert this to mV, Multiply by 1000
            </summary>
        </member>
        <member name="P:StiLib.Core.SLCalib.CRSCalibrator">
            <summary>
            Get Current CRS Calibration Device
            </summary>
        </member>
        <member name="T:StiLib.Core.CRSCalDevice">
            <summary>
            Cambridge Research System Calibration Device
            </summary>
        </member>
        <member name="F:StiLib.Core.CRSCalDevice.devicetype">
            <summary>
            calibration device type
            </summary>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.#ctor(StiLib.Core.CalDevice)">
            <summary>
            Create a CRS calibration device
            </summary>
            <param name="device_t"></param>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.calInitialise(System.Int32)">
            <summary>
            Initialise the ColorCAL. This function must be called before any of the others.
            The returned value is a handle to the device.  Use this when processing multiple devices
            </summary>
            <param name="Device"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.calReadLuminance(System.Double[])">
            <summary>
            Read a luminance value in cd/m2 from device
            To convert this to fL, divide by 3.426259101
            </summary>
            <param name="Luminance"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.calReadVoltage(System.Double[])">
            <summary>
            Read a voltage (in Volts) value from the device.
            To convert this to mV, Multiply by 1000
            </summary>
            <param name="Voltage"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.calReadColour(System.Double[],System.Double[],System.Double[])">
            <summary>
            Read a colour in CIE x,y,l from the device.
            Returns CALIB_NOTSUPPORTED(4) and (0,0,luminance) if colour feature is not supported by the device
            </summary>
            <param name="CieX"></param>
            <param name="CieY"></param>
            <param name="CieLum"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.calCloseDevice">
            <summary>
            Close communication with the device.
            Call this procedure before closing your program.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.calAutoCalibrate">
            <summary>
            Call this to perform a auto calibration of the device.
            This is performed automatically during calInitialise.
            The procedure may differ depending on the device type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.CRSCalDevice.calInitialise">
            <summary>
            Init and cal current device
            </summary>
            <returns></returns>
        </member>
        <member name="T:StiLib.Core.CalDevice">
            <summary>
            Calibration Device Type
            </summary>
        </member>
        <member name="F:StiLib.Core.CalDevice.None">
            <summary>
            No Device
            </summary>
        </member>
        <member name="F:StiLib.Core.CalDevice.OptiCal_COM1">
            <summary>
            OptiCal_COM1 photometer of Cambridge Research System, Ltd.
            </summary>
        </member>
        <member name="F:StiLib.Core.CalDevice.OptiCal_COM2">
            <summary>
            OptiCal_COM2 photometer of Cambridge Research System, Ltd.
            </summary>
        </member>
        <member name="F:StiLib.Core.CalDevice.OptiCal_COM3">
            <summary>
            OptiCal_COM3 photometer of Cambridge Research System, Ltd.
            </summary>
        </member>
        <member name="F:StiLib.Core.CalDevice.OptiCal_COM4">
            <summary>
            OptiCal_COM4 photometer of Cambridge Research System, Ltd.
            </summary>
        </member>
        <member name="F:StiLib.Core.CalDevice.OptiCal_USB">
            <summary>
            OptiCal_USB photometer of Cambridge Research System, Ltd.
            </summary>
        </member>
        <member name="F:StiLib.Core.CalDevice.ColorCal_USB">
            <summary>
            ColorCal_USB Colorimeter of Cambridge Research System, Ltd.
            </summary>
        </member>
        <member name="T:StiLib.Core.SLFreeCamera">
            <summary>
            Free Camera
            </summary>
        </member>
        <member name="T:StiLib.Core.SLCamera">
            <summary>
            StiLib Basic Camera
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.Position">
            <summary>
            Camera Position in World Space
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.Target">
            <summary>
            Camera Shooting Target in World Space
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.Up">
            <summary>
            Camera Space UP Direction in World Space
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.projtype">
            <summary>
            Camera Current Projection Type
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.FoV">
            <summary>
            Perspective Projection Field of View
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.NearPlane">
            <summary>
            Projection Front Clipping Plane
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.FarPlane">
            <summary>
            Projection Back Clipping Plane
            </summary>
        </member>
        <member name="F:StiLib.Core.SLCamera.viewport">
            <summary>
             Viewport of Current Camera
            </summary>
        </member>
        <member name="M:StiLib.Core.SLCamera.#ctor">
            <summary>
            Init to default  -- Position:(0,0,5), Target:(0,0,0), Up:(0,1,0), projtype:Ortho, FoV:PI/2, 
            NearPlane:5, FarPlane:200, viewport: default
            </summary>
        </member>
        <member name="M:StiLib.Core.SLCamera.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init to default but custom GraphicsDevice's viewport settings
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Core.SLCamera.#ctor(Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Init to default  -- Position:(0,0,5), Target:(0,0,0), Up:(0,1,0), projtype:Ortho, FoV:PI/4, 
            NearPlane:5, FarPlane:200 and custom viewport settings
            </summary>
            <param name="vport"></param>
        </member>
        <member name="M:StiLib.Core.SLCamera.#ctor(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,StiLib.Core.ProjectionType,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Init Camera to custom settings
            </summary>
            <param name="position"></param>
            <param name="target"></param>
            <param name="up"></param>
            <param name="type"></param>
            <param name="fov"></param>
            <param name="nearplane"></param>
            <param name="farplane"></param>
            <param name="vport"></param>
        </member>
        <member name="M:StiLib.Core.SLCamera.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to custom GraphicsDevice's viewport
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Core.SLCamera.Init(Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Init according to custom viewport
            </summary>
            <param name="vport"></param>
        </member>
        <member name="M:StiLib.Core.SLCamera.Init(Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,StiLib.Core.ProjectionType,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Viewport)">
            <summary>
            Init Camera to custom settings
            </summary>
            <param name="position"></param>
            <param name="target"></param>
            <param name="up"></param>
            <param name="type"></param>
            <param name="fov"></param>
            <param name="nearplane"></param>
            <param name="farplane"></param>
            <param name="vport"></param>
        </member>
        <member name="M:StiLib.Core.SLCamera.GetUnitProj(StiLib.Core.ProjectionType,System.Single)">
            <summary>
            Get Camera Unified Projection Matrix According to Custom Projection Type and Unit Factor
            </summary>
            <param name="type"></param>
            <param name="uf"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLCamera.Clone">
            <summary>
            Creates a new object that is a copy of the current instance
            </summary>
            <returns></returns>
        </member>
        <member name="P:StiLib.Core.SLCamera.ViewMatrix">
            <summary>
            Get Camera Current View Matrix
            </summary>
        </member>
        <member name="P:StiLib.Core.SLCamera.ProjMatrix">
            <summary>
            Get Camera Current Ununified Projection Matrix
            </summary>
        </member>
        <member name="P:StiLib.Core.SLCamera.Direction">
            <summary>
            Get Camera Current Shooting Direction
            </summary>
        </member>
        <member name="M:StiLib.Core.SLFreeCamera.#ctor">
            <summary>
            Init
            </summary>
        </member>
        <member name="M:StiLib.Core.SLFreeCamera.Update(StiLib.Core.SLInput)">
            <summary>
             Update Camera according to Input
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:StiLib.Core.ProjectionType">
            <summary>
            Projection Type
            </summary>
        </member>
        <member name="F:StiLib.Core.ProjectionType.Perspective">
            <summary>
            Perspective Projection
            </summary>
        </member>
        <member name="F:StiLib.Core.ProjectionType.Orthographic">
            <summary>
            Orthographic Projection
            </summary>
        </member>
        <member name="T:StiLib.Core.SLNet">
            <summary>
            StiLib Network Service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLNet.#ctor">
            <summary>
            Init
            </summary>
        </member>
        <member name="T:StiLib.Core.SLLogger">
            <summary>
            StiLib Logging Service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLLogger.#ctor">
            <summary>
            Default Logger target to StiLib.log file in current directory
            </summary>
        </member>
        <member name="M:StiLib.Core.SLLogger.#ctor(System.String)">
            <summary>
            Logger target to custom log file in current directory
            </summary>
            <param name="fname">Log File Name</param>
        </member>
        <member name="M:StiLib.Core.SLLogger.#ctor(System.String,System.String)">
            <summary>
            Logger target to custom log file in custom directory
            </summary>
            <param name="fpath"></param>
            <param name="fname"></param>
        </member>
        <member name="M:StiLib.Core.SLLogger.Log(System.Exception)">
            <summary>
            Log Exception
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLLogger.Log(System.String)">
            <summary>
            Log message string
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:StiLib.Core.SLLogger.FileName">
            <summary>
            Log File Name
            </summary>
        </member>
        <member name="P:StiLib.Core.SLLogger.FilePath">
            <summary>
            Log File Path
            </summary>
        </member>
        <member name="T:StiLib.Core.SLInput">
            <summary>
            Manage all input device states and all input events
            </summary>
        </member>
        <member name="F:StiLib.Core.SLInput.mouseState">
            <summary>
            Mouse State
            </summary>
        </member>
        <member name="F:StiLib.Core.SLInput.mouseStateLast">
            <summary>
            Mouse State
            </summary>
        </member>
        <member name="F:StiLib.Core.SLInput.keyboardState">
            <summary>
            Keyboard State
            </summary>
        </member>
        <member name="F:StiLib.Core.SLInput.keyboardStateLast">
            <summary>
            Keyboard State
            </summary>
        </member>
        <member name="F:StiLib.Core.SLInput.gamepadState">
            <summary>
            GamePad State
            </summary>
        </member>
        <member name="F:StiLib.Core.SLInput.gamepadStateLast">
            <summary>
            GamePad State
            </summary>
        </member>
        <member name="M:StiLib.Core.SLInput.#ctor">
            <summary>
            Init all the Input Devices States
            </summary>
        </member>
        <member name="M:StiLib.Core.SLInput.Update">
            <summary>
            Updata All the Input Devices States
            </summary>
        </member>
        <member name="M:StiLib.Core.SLInput.IsKeyUp(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is a Key at Up State
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsKeyDown(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is a Key at Down State
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsKeyPressed(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is a Key Just been pressed(Up State to Down State)
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsKeyReleased(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is a Key Just been released(Down State to Up State)
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsKeyHold(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is a Key being hold(Down State to Down State)
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsKeyFree(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Is a Key being free(Up State to Up State)
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.SetMousePosition(System.Int32,System.Int32)">
            <summary>
            Set Mouse Position
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseLeftButtonUp">
            <summary>
            Is Mouse LeftButton at Up State
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseLeftButtonDown">
            <summary>
            Is Mouse LeftButton at Down State
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseLeftButtonPressed">
            <summary>
            Is Mouse LeftButton Just been pressed
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseLeftButtonReleased">
            <summary>
            Is Mouse LeftButton Just been released
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseLeftButtonHold">
            <summary>
            Is Mouse LeftButton being hold
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseLeftButtonFree">
            <summary>
            Is Mouse LeftButton being free
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseMiddleButtonUp">
            <summary>
            Is Mouse MiddleButton at Up State
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseMiddleButtonDown">
            <summary>
            Is Mouse MiddleButton at Down State
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseMiddleButtonPressed">
            <summary>
            Is Mouse MiddleButton Just been pressed
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseMiddleButtonReleased">
            <summary>
            Is Mouse MiddleButton Just been released
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseMiddleButtonHold">
            <summary>
            Is Mouse MiddleButton being hold
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseMiddleButtonFree">
            <summary>
            Is Mouse MiddleButton being free
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseRightButtonUp">
            <summary>
            Is Mouse RightButton at Up State
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseRightButtonDown">
            <summary>
            Is Mouse RightButton at Down State
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseRightButtonPressed">
            <summary>
            Is Mouse RightButton Just been pressed
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseRightButtonReleased">
            <summary>
            Is Mouse RightButton Just been released
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseRightButtonHold">
            <summary>
            Is Mouse RightButton being hold
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLInput.IsMouseRightButtonFree">
            <summary>
            Is Mouse RightButton being free
            </summary>
            <returns></returns>
        </member>
        <member name="P:StiLib.Core.SLInput.KEY">
            <summary>
            Get KeyBoard State
            </summary>
        </member>
        <member name="P:StiLib.Core.SLInput.MOUSE">
            <summary>
            Get Mouse State
            </summary>
        </member>
        <member name="P:StiLib.Core.SLInput.GAMEPAD">
            <summary>
            Get GamePad State
            </summary>
        </member>
        <member name="P:StiLib.Core.SLInput.KEYLAST">
            <summary>
            Get Last KeyBoard State
            </summary>
        </member>
        <member name="P:StiLib.Core.SLInput.MOUSELAST">
            <summary>
            Get Last Mouse State
            </summary>
        </member>
        <member name="P:StiLib.Core.SLInput.GAMEPADLAST">
            <summary>
            Get Last GamePad State
            </summary>
        </member>
        <member name="P:StiLib.Core.SLInput.MouseWheelDelta">
            <summary>
            Get Mouse Wheel Delta Value
            </summary>
        </member>
        <member name="T:StiLib.Vision.BasePara">
            <summary>
            Visual Stimulus Basic Parameters
            </summary>
        </member>
        <member name="M:StiLib.Vision.BasePara.#ctor(Microsoft.Xna.Framework.Vector3,System.Single,System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Graphics.Color,System.Boolean)">
            <summary>
            Init to custom parameters
            </summary>
            <param name="center"></param>
            <param name="diameter"></param>
            <param name="orientation"></param>
            <param name="orientation3d"></param>
            <param name="speed"></param>
            <param name="movearea"></param>
            <param name="color"></param>
            <param name="visible"></param>
        </member>
        <member name="F:StiLib.Vision.BasePara.center">
            <summary>
            center in World Space(Unit)
            </summary>
        </member>
        <member name="F:StiLib.Vision.BasePara.diameter">
            <summary>
            Size(Unit)
            </summary>
        </member>
        <member name="F:StiLib.Vision.BasePara.orientation">
            <summary>
            Orientation: [0,180)(deg), Counterclockwise
            </summary>
        </member>
        <member name="F:StiLib.Vision.BasePara.orientation3d">
            <summary>
            3D Space Orientation Vector
            </summary>
        </member>
        <member name="F:StiLib.Vision.BasePara.speed">
            <summary>
            Moving Speed(Unit/s)
            </summary>
        </member>
        <member name="F:StiLib.Vision.BasePara.movearea">
            <summary>
            Moving Area(Unit)
            </summary>
        </member>
        <member name="F:StiLib.Vision.BasePara.color">
            <summary>
            Color
            </summary>
        </member>
        <member name="F:StiLib.Vision.BasePara.visible">
            <summary>
            Visible State
            </summary>
        </member>
        <member name="P:StiLib.Vision.BasePara.Default">
            <summary>
            Get Default BasePara -- center:(0,0,0), diameter:10Unit, orientation:0.0deg, orientation3d:(0,0,0), speed:(0,0,0), movearea:10Unit, color:White, visible:true
            </summary>
        </member>
        <member name="T:StiLib.Vision.PrimitivePara">
            <summary>
            Primitive Type Parameters
            </summary>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.#ctor(Microsoft.Xna.Framework.Graphics.VertexPositionColor[],System.Int32[],Microsoft.Xna.Framework.Vector3,System.Single,System.Single,Microsoft.Xna.Framework.Vector3,Microsoft.Xna.Framework.Vector3,System.Single,Microsoft.Xna.Framework.Graphics.Color,System.Boolean)">
            <summary>
            Init All Parameters to custom
            </summary>
            <param name="vertices"></param>
            <param name="indices"></param>
            <param name="center"></param>
            <param name="diameter"></param>
            <param name="orientation"></param>
            <param name="orientation3d"></param>
            <param name="speed"></param>
            <param name="movearea"></param>
            <param name="color"></param>
            <param name="visible"></param>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.#ctor(Microsoft.Xna.Framework.Graphics.VertexPositionColor[],System.Int32[],StiLib.Vision.BasePara)">
            <summary>
            Init all parameters to custom
            </summary>
            <param name="vertices"></param>
            <param name="indices"></param>
            <param name="basepara"></param>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.Arrow(System.Single,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Get a Arrow parameter with center=(0,0,0), headangle=60(deg), headslopesize=1(visual angle degree)
            </summary>
            <param name="diameter"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.Arrow(System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Vector3,System.Single,System.Single)">
            <summary>
            Get a Arrow parameter
            </summary>
            <param name="diameter"></param>
            <param name="color"></param>
            <param name="center"></param>
            <param name="headangle"></param>
            <param name="headslopesize"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.Cross(System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Get a Cross parameter
            </summary>
            <param name="diameter"></param>
            <param name="color"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.Circle(System.Single,Microsoft.Xna.Framework.Graphics.Color,System.Boolean)">
            <summary>
            Get a circle parameter with center=(0,0,0), resolution=100 points in the circle
            </summary>
            <param name="diameter"></param>
            <param name="color"></param>
            <param name="isfilled"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.Circle(System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Vector3,System.Int32,System.Boolean)">
            <summary>
            Get a Circle parameter
            </summary>
            <param name="diameter"></param>
            <param name="color"></param>
            <param name="center"></param>
            <param name="resolution"></param>
            <param name="isfilled"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.RadialCircle(System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Get a RadialCircle parameter with center=(0,0,0), resolution=100 points in the circle
            </summary>
            <param name="diameter"></param>
            <param name="centercolor"></param>
            <param name="circlecolor"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.RadialCircle(System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Vector3,System.Int32)">
            <summary>
            Get a RadialCircle parameter
            </summary>
            <param name="diameter"></param>
            <param name="centercolor"></param>
            <param name="circlecolor"></param>
            <param name="center"></param>
            <param name="resolution"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.Gaussian(System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Vector3)">
            <summary>
            Get Gaussian Mask Parameters using default Resolution:150
            </summary>
            <param name="diameter"></param>
            <param name="sigma"></param>
            <param name="color"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Vision.PrimitivePara.Gaussian(System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Vector3,System.Int32)">
            <summary>
            Get Gaussian Mask Parameters
            </summary>
            <param name="diameter"></param>
            <param name="sigma"></param>
            <param name="centercolor"></param>
            <param name="circlecolor"></param>
            <param name="center"></param>
            <param name="resolution"></param>
            <returns></returns>
        </member>
        <member name="F:StiLib.Vision.PrimitivePara.vertices">
            <summary>
            Primitive Vertices Array
            </summary>
        </member>
        <member name="F:StiLib.Vision.PrimitivePara.indices">
            <summary>
            Primitive Indices Array
            </summary>
        </member>
        <member name="F:StiLib.Vision.PrimitivePara.BasePara">
            <summary>
            Basic Parameters
            </summary>
        </member>
        <member name="P:StiLib.Vision.PrimitivePara.Default">
            <summary>
            Get default Primitive parameters -- A White Point at Origin in World Space
            </summary>
        </member>
        <member name="T:StiLib.Vision.MaskPara">
            <summary>
            Stimulus Mask Parameters
            </summary>
        </member>
        <member name="M:StiLib.Vision.MaskPara.#ctor(StiLib.Vision.BasePara,StiLib.Vision.MaskType)">
            <summary>
            Init to custom settings
            </summary>
            <param name="bpara"></param>
            <param name="mtype"></param>
        </member>
        <member name="F:StiLib.Vision.MaskPara.BasePara">
            <summary>
            Mask Basic Parameters
            </summary>
        </member>
        <member name="F:StiLib.Vision.MaskPara.MaskType">
            <summary>
            Mask Type
            </summary>
        </member>
        <member name="P:StiLib.Vision.MaskPara.Default">
            <summary>
            Get Default:None Mask
            </summary>
        </member>
        <member name="T:StiLib.Vision.BarPara">
            <summary>
            Bar Type Parameters
            </summary>
        </member>
        <member name="M:StiLib.Vision.BarPara.#ctor(StiLib.Vision.BasePara,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Init Bar Parameters
            </summary>
            <param name="bpara"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="direction"></param>
            <param name="speed"></param>
        </member>
        <member name="F:StiLib.Vision.BarPara.BasePara">
            <summary>
            Basic Parameters
            </summary>
        </member>
        <member name="F:StiLib.Vision.BarPara.width">
            <summary>
            Bar Width
            </summary>
        </member>
        <member name="F:StiLib.Vision.BarPara.height">
            <summary>
            Bar Height
            </summary>
        </member>
        <member name="F:StiLib.Vision.BarPara.direction">
            <summary>
            Bar Moving Direction(deg)
            </summary>
        </member>
        <member name="F:StiLib.Vision.BarPara.speed">
            <summary>
            Bar Moving Speed(Unit/s)
            </summary>
        </member>
        <member name="P:StiLib.Vision.BarPara.Default">
            <summary>
            Get default parameters -- BasePara:default, width:3, height:1, direction:0, speed:10
            </summary>
        </member>
        <member name="T:StiLib.Vision.GratingPara">
            <summary>
            Grating Type Parameters
            </summary>
        </member>
        <member name="M:StiLib.Vision.GratingPara.#ctor(StiLib.Vision.BasePara,StiLib.Vision.MaskPara,StiLib.Vision.Shape,StiLib.Vision.GratingType,StiLib.Vision.MoveType,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Graphics.Color,Microsoft.Xna.Framework.Graphics.Color,System.Int32)">
            <summary>
            Init Grating Parameters
            </summary>
            <param name="bpara"></param>
            <param name="mpara"></param>
            <param name="shape"></param>
            <param name="gtype"></param>
            <param name="mtype"></param>
            <param name="direction"></param>
            <param name="tf"></param>
            <param name="sf"></param>
            <param name="sphase"></param>
            <param name="luminance"></param>
            <param name="contrast"></param>
            <param name="lhcolor"></param>
            <param name="rlcolor"></param>
            <param name="resolution"></param>
        </member>
        <member name="F:StiLib.Vision.GratingPara.BasePara">
            <summary>
            Basic Parameters
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.maskpara">
            <summary>
            Mask Parameters
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.shape">
            <summary>
            Grating Geometry
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.gratingtype">
            <summary>
            Grating Type
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.movetype">
            <summary>
            Move Type
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.direction">
            <summary>
            Move Direction
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.tf">
            <summary>
            Temporal Frequency(circle/s)
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.sf">
            <summary>
            Spatial Frequency(circle/Unit)
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.sphase">
            <summary>
            Grating Spatial Phase (0-1):(0:2pi)
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.luminance">
            <summary>
            Grating Average Luminance(0-1)
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.contrast">
            <summary>
            Grating Brightness Contrast(0-1)
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.lhcolor">
            <summary>
            Grating Left High Color
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.rlcolor">
            <summary>
            Grating Right Low Color
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingPara.resolution">
            <summary>
            Grating Interpolation Resolution
            </summary>
        </member>
        <member name="P:StiLib.Vision.GratingPara.Default">
            <summary>
            Get default parameters -- BasePara:default, Mask:None, Shape:circle, GratingType:sinusoidal, MoveType:drifting, 
            Direction:0, TF:2, SF:0.5, Phase:0, Luminance:0.5, Contrast:1, LeftHighColor:white, RightLowColor:black, Resolution:100
            </summary>
        </member>
        <member name="T:StiLib.Vision.ModelPara">
            <summary>
            Model Type Parameter
            </summary>
        </member>
        <member name="M:StiLib.Vision.ModelPara.#ctor(StiLib.Vision.BasePara,System.String)">
            <summary>
            Init
            </summary>
            <param name="bpara"></param>
            <param name="mfile"></param>
        </member>
        <member name="F:StiLib.Vision.ModelPara.BasePara">
            <summary>
            Basic Parameter
            </summary>
        </member>
        <member name="F:StiLib.Vision.ModelPara.MFilename">
            <summary>
            Model File Name
            </summary>
        </member>
        <member name="P:StiLib.Vision.ModelPara.Default">
            <summary>
            Get default model parameter -- BasePara:default, ModelName:""
            </summary>
        </member>
        <member name="T:StiLib.Vision.Unit">
            <summary>
            Visual Measure Unit
            </summary>
        </member>
        <member name="F:StiLib.Vision.Unit.Deg">
            <summary>
            Visual Angle Degree
            </summary>
        </member>
        <member name="F:StiLib.Vision.Unit.MM">
            <summary>
            Millimeter
            </summary>
        </member>
        <member name="F:StiLib.Vision.Unit.Pixel">
            <summary>
            GraphicsDevice Resolution
            </summary>
        </member>
        <member name="T:StiLib.Vision.Shape">
            <summary>
            Visual Stimulus Shape
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Point">
            <summary>
            Point
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Curve">
            <summary>
            Curve
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Grid">
            <summary>
            Grid
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Triangle">
            <summary>
            Triangle
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Rectangle">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Quadrate">
            <summary>
            Quadrate
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Cuboid">
            <summary>
            Cuboid
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Cube">
            <summary>
            Cube
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Ellipse">
            <summary>
            Ellipse
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Ellipsoid">
            <summary>
            Ellipsoid
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Sphere">
            <summary>
            Sphere
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Cone">
            <summary>
            Cone
            </summary>
        </member>
        <member name="F:StiLib.Vision.Shape.Cylinder">
            <summary>
            Cylinder
            </summary>
        </member>
        <member name="T:StiLib.Vision.VSType">
            <summary>
            Vision Stimulus Type
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.Bar">
            <summary>
            Bar
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.Grating">
            <summary>
            Grating
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.Primitive">
            <summary>
            Simple Primitive
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.SLModel">
            <summary>
            Model
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.SLQuad">
            <summary>
            Quad
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.SLTexture">
            <summary>
            Texture
            </summary>
        </member>
        <member name="F:StiLib.Vision.VSType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="T:StiLib.Vision.GratingType">
            <summary>
            Grating Type
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingType.Sinusoidal">
            <summary>
            Sinusoidal
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingType.Linear">
            <summary>
            Linear
            </summary>
        </member>
        <member name="F:StiLib.Vision.GratingType.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="T:StiLib.Vision.MoveType">
            <summary>
            Move Type
            </summary>
        </member>
        <member name="F:StiLib.Vision.MoveType.Drifting">
            <summary>
            Drifting
            </summary>
        </member>
        <member name="F:StiLib.Vision.MoveType.Standing">
            <summary>
            Standing
            </summary>
        </member>
        <member name="T:StiLib.Vision.MaskType">
            <summary>
            Mask Type
            </summary>
        </member>
        <member name="F:StiLib.Vision.MaskType.None">
            <summary>
            No Mask
            </summary>
        </member>
        <member name="F:StiLib.Vision.MaskType.Gaussian">
            <summary>
            Gaussian Mask with sigma
            </summary>
        </member>
        <member name="T:StiLib.Vision.SLModel">
            <summary>
            StiLib Model Service to load, render, manipulate a model
            </summary>
        </member>
        <member name="F:StiLib.Vision.SLModel.Para">
            <summary>
            Model Parameter
            </summary>
        </member>
        <member name="M:StiLib.Vision.SLModel.#ctor">
            <summary>
            Set SLModel parameters to default before LoadContent() and Init()
            </summary>
        </member>
        <member name="M:StiLib.Vision.SLModel.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String)">
            <summary>
            Init to default SLModel parameter
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="mfilename"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.ModelPara,System.IServiceProvider,System.String,System.String)">
            <summary>
            Init
            </summary>
            <param name="gd"></param>
            <param name="mpara"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="mfilename"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.LoadContent(System.IServiceProvider,System.String,System.String)">
            <summary>
            Load a Model
            </summary>
            <param name="service"></param>
            <param name="path"></param>
            <param name="mfilename"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to internal SLModel parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.ModelPara)">
            <summary>
            Init to custom SLModel parameters
            </summary>
            <param name="gd"></param>
            <param name="mpara"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.Draw">
            <summary>
            Draw Model Using BasicEffect
            </summary>
        </member>
        <member name="M:StiLib.Vision.SLModel.RotateModel(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Rotate Model in model space
            </summary>
            <param name="rotate"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.TranslateModel(Microsoft.Xna.Framework.Vector3)">
            <summary>
            Translate Model in world space
            </summary>
            <param name="translate"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.SetWorld(Microsoft.Xna.Framework.Matrix)">
            <summary>
            Set World Transform
            </summary>
            <param name="world"></param>
        </member>
        <member name="M:StiLib.Vision.SLModel.SetVisible(System.Boolean)">
            <summary>
            Set Visible State
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="P:StiLib.Vision.SLModel.Model">
            <summary>
            Get the XNA Model
            </summary>
        </member>
        <member name="P:StiLib.Vision.SLModel.Content">
            <summary>
            Get Content Manager
            </summary>
        </member>
        <member name="T:StiLib.Vision.Image">
            <summary>
            StiLib Image Stimulus
            </summary>
        </member>
        <member name="F:StiLib.Vision.Image.SpriteBatch">
            <summary>
            Sprite Batch
            </summary>
        </member>
        <member name="F:StiLib.Vision.Image.BasePara">
            <summary>
            Basic Parameters
            </summary>
        </member>
        <member name="F:StiLib.Vision.Image.ContentManager">
            <summary>
            Content Manager
            </summary>
        </member>
        <member name="F:StiLib.Vision.Image.Texture">
            <summary>
            Image Texture
            </summary>
        </member>
        <member name="M:StiLib.Vision.Image.#ctor">
            <summary>
            Set Image parameters to default, 
            before LoadContent() and Init()
            </summary>
        </member>
        <member name="M:StiLib.Vision.Image.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String)">
            <summary>
            Init to default
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="imagename"></param>
        </member>
        <member name="M:StiLib.Vision.Image.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String,StiLib.Vision.BasePara)">
            <summary>
            Init to custom base parameters
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="imagename"></param>
            <param name="bpara"></param>
        </member>
        <member name="M:StiLib.Vision.Image.LoadContent(System.IServiceProvider,System.String,System.String)">
            <summary>
            Load Compiled Image.xnb File using Content Manager
            </summary>
            <param name="service"></param>
            <param name="path"></param>
            <param name="imagename"></param>
        </member>
        <member name="M:StiLib.Vision.Image.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to internal parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Image.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.BasePara)">
            <summary>
            Init according to custom base parameters
            </summary>
            <param name="gd"></param>
            <param name="bpara"></param>
        </member>
        <member name="M:StiLib.Vision.Image.Draw">
            <summary>
            Draw Image at Position:(5,5)
            </summary>
        </member>
        <member name="M:StiLib.Vision.Image.Draw(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Draw custom position and tinted image
            </summary>
            <param name="position"></param>
            <param name="color"></param>
        </member>
        <member name="M:StiLib.Vision.Image.Draw(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Draw tinted image to custom rectangle
            </summary>
            <param name="destrect"></param>
            <param name="color"></param>
        </member>
        <member name="M:StiLib.Vision.Image.Draw(Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Draw part of tinted image to custom rectangle
            </summary>
            <param name="destrect"></param>
            <param name="sourrect"></param>
            <param name="color"></param>
        </member>
        <member name="M:StiLib.Vision.Image.SetVisible(System.Boolean)">
            <summary>
            Set Visible State
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="T:StiLib.Core.SLGDService">
            <summary>
            The GraphicsDeviceService is responsible for creating and managing the GraphicsDevice.
            All GraphicsDeviceService consumer instances share the same GraphicsDeviceService.
            This class implements the standard IGraphicsDeviceService interface, 
            which provides notification events for when the device is reset or disposed.
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGDService.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Constructor is private, because this is a singleton class.
            Client should use the public AddRef method instead.
            </summary>
            <param name="windowHandle"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:StiLib.Core.SLGDService.AddRef(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Gets a reference to the singleton instance.
            </summary>
            <param name="windowHandle"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLGDService.Release(System.Boolean)">
            <summary>
            Releases a reference to the singleton instance.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:StiLib.Core.SLGDService.ResetDevice(System.Int32,System.Int32)">
            <summary>
            Resets the graphics device to whichever is bigger out of the specified
            resolution or its current size. This behavior means the device will
            demand-grow to the largest of all its clients.
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="E:StiLib.Core.SLGDService.DeviceCreated">
            <summary>
            DeviceCreated EventHandler
            </summary>
        </member>
        <member name="E:StiLib.Core.SLGDService.DeviceDisposing">
            <summary>
            DeviceDisposing EventHandler
            </summary>
        </member>
        <member name="E:StiLib.Core.SLGDService.DeviceReset">
            <summary>
            DeviceReset EventHandler
            </summary>
        </member>
        <member name="E:StiLib.Core.SLGDService.DeviceResetting">
            <summary>
            DeviceResetting EventHandler
            </summary>
        </member>
        <member name="P:StiLib.Core.SLGDService.GraphicsDevice">
            <summary>
            Gets the current graphics device.
            </summary>
        </member>
        <member name="T:StiLib.Core.SLDictionary`3">
            <summary>
            StiLib 2keys-1value Dictionary
            </summary>
            <typeparam name="pK">Primary Key Type</typeparam>
            <typeparam name="sK">Secondary Key Type</typeparam>
            <typeparam name="V">Value Type</typeparam>
        </member>
        <member name="F:StiLib.Core.SLDictionary`3.pDictionary">
            <summary>
            Primary Dictionary -- map primary key to value
            </summary>
        </member>
        <member name="F:StiLib.Core.SLDictionary`3.sTop">
            <summary>
            map Secondary key to primary key
            </summary>
        </member>
        <member name="F:StiLib.Core.SLDictionary`3.pTos">
            <summary>
            map primary key to secondary key
            </summary>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.Associate(`1,`0)">
            <summary>
            Associate Primary and Secondary Keys
            </summary>
            <param name="sKey"></param>
            <param name="pKey"></param>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.TryGetValue(`0,`2@)">
            <summary>
            Get Value from Primary Key
            </summary>
            <param name="pKey"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.TryGetValue(`1,`2@)">
            <summary>
            Get Value from Secondary Key
            </summary>
            <param name="sKey"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.TryGetKey(`0,`1@)">
            <summary>
            Get Secondary Key from Primary Key
            </summary>
            <param name="pKey"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.TryGetKey(`1,`0@)">
            <summary>
            Get Primary Key from Secondary Key
            </summary>
            <param name="sKey"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.ContainsKey(`0)">
            <summary>
            If Contains specified primary key
            </summary>
            <param name="pKey"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.ContainsKey(`1)">
            <summary>
            If Contains specified secondary key
            </summary>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.Remove(`0)">
            <summary>
            Remove value specified by primary key
            </summary>
            <param name="pKey"></param>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.Remove(`1)">
            <summary>
            Remove value specified by secondary key
            </summary>
            <param name="sKey"></param>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.Add(`0,`2)">
            <summary>
            Add Primary Key/Value pair
            </summary>
            <param name="pKey"></param>
            <param name="val"></param>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.Add(`0,`1,`2)">
            <summary>
            Add Primary and Secondary Keys/Value pair
            </summary>
            <param name="pKey"></param>
            <param name="sKey"></param>
            <param name="val"></param>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.CloneValues">
            <summary>
            Get a clone array of all values
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.ClonePrimaryKeys">
            <summary>
            Get a clone array of all Primary keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.CloneSecondaryKeys">
            <summary>
            Get a clone array of all Secondary keys
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.Clear">
            <summary>
            Clear all Keys/Value Pairs
            </summary>
        </member>
        <member name="M:StiLib.Core.SLDictionary`3.GetEnumerator">
            <summary>
            Get Enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:StiLib.Core.SLDictionary`3.Item(`0)">
            <summary>
            Get Value from Primary Key
            </summary>
            <param name="pKey"></param>
            <returns></returns>
        </member>
        <member name="P:StiLib.Core.SLDictionary`3.Item(`1)">
            <summary>
            Get Value from Secondary Key
            </summary>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="P:StiLib.Core.SLDictionary`3.Count">
            <summary>
            Get the Count of Keys/Value pairs
            </summary>
        </member>
        <member name="T:StiLib.Vision.Stimuli.Two_dGrating">
            <summary>
            Two Drifting Grating
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dGrating.#ctor">
            <summary>
            Default SLForm Settings
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dGrating.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Custom SLForm Settings
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate"></param>
            <param name="isvsync"></param>
            <param name="isshowcursor"></param>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dGrating.text">
            <summary>
            Text to draw Message
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dGrating.ex">
            <summary>
            Hold the Information about the Experiment
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dGrating.Grating">
            <summary>
            Two Drifting Gratings
            </summary>
        </member>
        <member name="F:StiLib.Vision.Stimuli.Two_dGrating.gratingangle">
            <summary>
            Angle between directions of two drifting gratings
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dGrating.Initialize">
            <summary>
            Init all information of the experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dGrating.SetFlow">
            <summary>
            Set Flow to control experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dGrating.MarkHead">
            <summary>
            Send crucial information in MarkerHeader 
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dGrating.Update">
            <summary>
            Update experiment
            </summary>
        </member>
        <member name="M:StiLib.Vision.Stimuli.Two_dGrating.Draw">
            <summary>
            Draw Stimuli
            </summary>
        </member>
        <member name="T:StiLib.Vision.Text">
            <summary>
            StiLib Text Stimulus
            </summary>
        </member>
        <member name="F:StiLib.Vision.Text.SpriteBatch">
            <summary>
            Sprite Batch
            </summary>
        </member>
        <member name="F:StiLib.Vision.Text.Font">
            <summary>
            Text Font
            </summary>
        </member>
        <member name="F:StiLib.Vision.Text.BasePara">
            <summary>
            Basic Parameters
            </summary>
        </member>
        <member name="F:StiLib.Vision.Text.ContentManager">
            <summary>
            Content Manager
            </summary>
        </member>
        <member name="M:StiLib.Vision.Text.#ctor">
            <summary>
            Set Text parameters to default -- Color:PeachPuff, 
            before LoadContent() and Init()
            </summary>
        </member>
        <member name="M:StiLib.Vision.Text.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String)">
            <summary>
            Init to default
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="spritefont"></param>
        </member>
        <member name="M:StiLib.Vision.Text.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.IServiceProvider,System.String,System.String,StiLib.Vision.BasePara)">
            <summary>
            Init to custom base parameters
            </summary>
            <param name="gd"></param>
            <param name="service"></param>
            <param name="path"></param>
            <param name="spritefont"></param>
            <param name="bpara"></param>
        </member>
        <member name="M:StiLib.Vision.Text.LoadContent(System.IServiceProvider,System.String,System.String)">
            <summary>
            Load SpriteFont using Content Manager
            </summary>
            <param name="service"></param>
            <param name="path"></param>
            <param name="spritefont"></param>
        </member>
        <member name="M:StiLib.Vision.Text.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice)">
            <summary>
            Init according to internal parameters
            </summary>
            <param name="gd"></param>
        </member>
        <member name="M:StiLib.Vision.Text.Init(Microsoft.Xna.Framework.Graphics.GraphicsDevice,StiLib.Vision.BasePara)">
            <summary>
            Init according to custom base parameters
            </summary>
            <param name="gd"></param>
            <param name="bpara"></param>
        </member>
        <member name="M:StiLib.Vision.Text.Draw">
            <summary>
            Draw Standard Help Text at Position:(5,5)
            </summary>
        </member>
        <member name="M:StiLib.Vision.Text.Draw(System.String)">
            <summary>
            Draw Custom Text at Position:(5,5)
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:StiLib.Vision.Text.Draw(Microsoft.Xna.Framework.Vector2,System.String,Microsoft.Xna.Framework.Graphics.Color)">
            <summary>
            Draw Text
            </summary>
            <param name="position"></param>
            <param name="text"></param>
            <param name="color"></param>
        </member>
        <member name="M:StiLib.Vision.Text.Draw(Microsoft.Xna.Framework.Vector2,System.String,Microsoft.Xna.Framework.Graphics.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single)">
            <summary>
            Draw Rotated and Scaled Text
            </summary>
            <param name="position"></param>
            <param name="text"></param>
            <param name="color"></param>
            <param name="rotate"></param>
            <param name="origin"></param>
            <param name="scale"></param>
        </member>
        <member name="M:StiLib.Vision.Text.SetVisible(System.Boolean)">
            <summary>
            Set Visible State
            </summary>
            <param name="isvisible"></param>
        </member>
        <member name="T:StiLib.Core.Media">
            <summary>
            StiLib Media Service
            </summary>
        </member>
        <member name="F:StiLib.Core.Media.m_pSession">
            <summary>
            Media Session
            </summary>
        </member>
        <member name="F:StiLib.Core.Media.m_pSource">
            <summary>
            Media Source
            </summary>
        </member>
        <member name="F:StiLib.Core.Media.m_pVideoDisplay">
            <summary>
            Video Display Control
            </summary>
        </member>
        <member name="F:StiLib.Core.Media.m_hwndVideo">
            <summary>
            Video window
            </summary>
        </member>
        <member name="F:StiLib.Core.Media.m_hwndEvent">
            <summary>
            App window to receive events
            </summary>
        </member>
        <member name="F:StiLib.Core.Media.m_state">
            <summary>
            Current state of the media session
            </summary>
        </member>
        <member name="F:StiLib.Core.Media.m_hCloseEvent">
            <summary>
            Event to wait on while closing
            </summary>
        </member>
        <member name="M:StiLib.Core.Media.#ctor(System.IntPtr,System.IntPtr)">
            <summary>
            Init
            </summary>
            <param name="hVideo"></param>
            <param name="hEvent"></param>
        </member>
        <member name="M:StiLib.Core.Media.OpenURL(System.String)">
            <summary>
            Open from a Url address
            </summary>
            <param name="sURL"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.Play">
            <summary>
            Play media
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.Pause">
            <summary>
            Pause media
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.Shutdown">
            <summary>
            Shut down MF
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.Repaint">
            <summary>
            Update frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.ResizeVideo(System.Int16,System.Int16)">
            <summary>
            Resize video
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.GetState">
            <summary>
            Get Media State
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.HasVideo">
            <summary>
            If have a video media
            </summary>
            <returns></returns>
        </member>
        <member name="M:StiLib.Core.Media.NotifyState">
            <summary>
            Notifies the application when the state changes.
            </summary>
        </member>
        <member name="M:StiLib.Core.Media.NotifyError(System.Int32)">
            <summary>
            Notifies the application when an error occurs.
            </summary>
            <param name="hr"></param>
        </member>
        <member name="M:StiLib.Core.Media.CreateSession">
            <summary>
            Create a Media Session
            </summary>
        </member>
        <member name="M:StiLib.Core.Media.CloseSession">
            <summary>
            Close a Media Session
            </summary>
        </member>
        <member name="M:StiLib.Core.Media.StartPlayback">
            <summary>
            Play back Media
            </summary>
        </member>
        <member name="M:StiLib.Core.Media.CreateMediaSource(System.String)">
            <summary>
            Using Source Resolver to create media source
            </summary>
            <param name="sURL"></param>
        </member>
        <member name="M:StiLib.Core.Media.CreateTopologyFromSource(MediaFoundation.IMFTopology@)">
            <summary>
            Create media Topology
            </summary>
            <param name="ppTopology"></param>
        </member>
        <member name="M:StiLib.Core.Media.AddBranchToPartialTopology(MediaFoundation.IMFTopology,MediaFoundation.IMFPresentationDescriptor,System.Int32)">
            <summary>
            Add to Topology
            </summary>
            <param name="pTopology"></param>
            <param name="pSourcePD"></param>
            <param name="iStream"></param>
        </member>
        <member name="M:StiLib.Core.Media.CreateSourceStreamNode(MediaFoundation.IMFPresentationDescriptor,MediaFoundation.IMFStreamDescriptor,MediaFoundation.IMFTopologyNode@)">
            <summary>
            Create media stream node
            </summary>
            <param name="pSourcePD"></param>
            <param name="pSourceSD"></param>
            <param name="ppNode"></param>
        </member>
        <member name="M:StiLib.Core.Media.CreateOutputNode(MediaFoundation.IMFStreamDescriptor,MediaFoundation.IMFTopologyNode@)">
            <summary>
            Create media ouput node
            </summary>
            <param name="pSourceSD"></param>
            <param name="ppNode"></param>
        </member>
        <member name="M:StiLib.Core.Media.OnTopologyReady(MediaFoundation.IMFMediaEvent)">
            <summary>
            Handle TopologyReady Event
            </summary>
            <param name="pEvent"></param>
        </member>
        <member name="M:StiLib.Core.Media.OnSessionStarted(MediaFoundation.IMFMediaEvent)">
            <summary>
            Handle SessionStarted Event
            </summary>
            <param name="pEvent"></param>
        </member>
        <member name="M:StiLib.Core.Media.OnSessionPaused(MediaFoundation.IMFMediaEvent)">
            <summary>
            Handle SessionPaused Event
            </summary>
            <param name="pEvent"></param>
        </member>
        <member name="M:StiLib.Core.Media.OnSessionClosed(MediaFoundation.IMFMediaEvent)">
            <summary>
            Handle SessionClosed Event
            </summary>
            <param name="pEvent"></param>
        </member>
        <member name="M:StiLib.Core.Media.OnPresentationEnded(MediaFoundation.IMFMediaEvent)">
            <summary>
            Handle PresentationEnded Event
            </summary>
            <param name="pEvent"></param>
        </member>
        <member name="T:StiLib.Core.MediaState">
            <summary>
            Media State
            </summary>
        </member>
        <member name="F:StiLib.Core.MediaState.Ready">
            <summary>
            Ready
            </summary>
        </member>
        <member name="F:StiLib.Core.MediaState.OpenPending">
            <summary>
            OpenPending
            </summary>
        </member>
        <member name="F:StiLib.Core.MediaState.Started">
            <summary>
            Started
            </summary>
        </member>
        <member name="F:StiLib.Core.MediaState.PausePending">
            <summary>
            PausePending
            </summary>
        </member>
        <member name="F:StiLib.Core.MediaState.Paused">
            <summary>
            Paused
            </summary>
        </member>
        <member name="F:StiLib.Core.MediaState.StartPending">
            <summary>
            StartPending
            </summary>
        </member>
        <member name="T:StiLib.Core.SLGame">
            <summary>
            StiLib game service
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGame.#ctor">
            <summary>
            Init to Default -- width:800, height:600, refreshrate:0, Vsync:true, updaterate:120, ismousevisible:false
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGame.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Init SLGame
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="refreshrate"></param>
            <param name="isvsync"></param>
            <param name="updaterate"></param>
            <param name="ismousevisible"></param>
        </member>
        <member name="M:StiLib.Core.SLGame.gdm_PreparingDeviceSettings(System.Object,Microsoft.Xna.Framework.PreparingDeviceSettingsEventArgs)">
            <summary>
            Prepare the settings for creation of graphicsdevice
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StiLib.Core.SLGame.SetFlowControl">
            <summary>
            Set Flow Controller to begin a new Experiment
            </summary>
        </member>
        <member name="M:StiLib.Core.SLGame.MarkerHeader">
            <summary>
            Transfer Experiment MarkerHeader only once before it's running
            </summary>
        </member>
        <member name="P:StiLib.Core.SLGame.FCamera">
            <summary>
            Gets the Default FreeCamera
            </summary>
        </member>
        <member name="P:StiLib.Core.SLGame.GDManager">
            <summary>
            Gets the GraphicsDeviceManager.
            </summary>
        </member>
        <member name="P:StiLib.Core.SLGame.Input">
            <summary>
            Gets the SLInput
            </summary>
        </member>
        <member name="P:StiLib.Core.SLGame.GO_OVER">
            <summary>
            Toggle Between Content Run(true) and RunOver(false) State
            </summary>
        </member>
    </members>
</doc>
